import { Event as GraphEvent } from '@antv/g-base';
import { IShape } from '@antv/g-base';
declare class EventController {
    private canvas;
    private hammerRuntime;
    private draggingShape;
    private dragging;
    private currentShape;
    private panstartShape;
    private panstartPoint;
    private panstartTimeStamp;
    constructor(cfg: any);
    _initEvent(): void;
    _emitMobileEvent(type: any, ev: any): void;
    _getEventObj(type: any, event: any, point: any, target: any, fromShape: any, toShape: any): GraphEvent;
    handleEvent: (ev: any) => void;
    _getShape(point: any, event: any): IShape;
    _getPointInfo(ev: any): {
        x: number;
        y: number;
        clientX: any;
        clientY: any;
    };
    _triggerEvent(type: any, ev: any): void;
    _onpanstart(pointInfo: any, shape: any, event: any): void;
    _emitDragoverEvents(event: any, pointInfo: any, fromShape: any, toShape: any, isCanvasEmit: any): void;
    _afterDrag(draggingShape: any, pointInfo: any, event: any): void;
    _onpanend(pointInfo: any, shape: any, event: any): void;
    _onpanmove(pointInfo: any, shape: any, event: any): void;
    _emitEvent(type: any, event: any, pointInfo: any, shape: any, fromShape?: any, toShape?: any): void;
    destroy(): void;
}
export default EventController;
