function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
// @ts-nocheck
import F6 from './index';
// @ts-ignore：兼容旧版本H5导出,不用考虑其他环境，其他环境会使用其他规范
var getGlobal = function getGlobal() {
  if (typeof globalThis !== 'undefined') {
    return globalThis;
  }
  if (typeof self !== 'undefined') {
    return self;
  }
  if (typeof window !== 'undefined') {
    return window;
  }
  if (typeof global !== 'undefined') {
    return global;
  }
};
var root = getGlobal();
// umd 部分定义
if ((typeof exports === "undefined" ? "undefined" : _typeof(exports)) === 'object' && (typeof module === "undefined" ? "undefined" : _typeof(module)) === 'object') {} else if (typeof define === 'function' && define.amd) {} else if ((typeof exports === "undefined" ? "undefined" : _typeof(exports)) === 'object') {} else {
  Object.defineProperties(root, {
    f6: {
      get: function get() {
        console.warn('废弃的特性: f6, 请使用 F6 代替 f6');
        return F6;
      }
    }
  });
}
export default F6;