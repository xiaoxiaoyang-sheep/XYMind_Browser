"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  registerGraph: true,
  Arrow: true,
  Marker: true,
  Shape: true,
  Algorithm: true,
  Graph: true,
  Layout: true,
  registerLayout: true,
  Global: true,
  Util: true
};
exports.Algorithm = void 0;
Object.defineProperty(exports, "Arrow", {
  enumerable: true,
  get: function get() {
    return _f6Core.Arrow;
  }
});
Object.defineProperty(exports, "Global", {
  enumerable: true,
  get: function get() {
    return _global.default;
  }
});
Object.defineProperty(exports, "Graph", {
  enumerable: true,
  get: function get() {
    return _graph.default;
  }
});
Object.defineProperty(exports, "Layout", {
  enumerable: true,
  get: function get() {
    return _layout.Layout;
  }
});
Object.defineProperty(exports, "Marker", {
  enumerable: true,
  get: function get() {
    return _f6Core.Marker;
  }
});
Object.defineProperty(exports, "Shape", {
  enumerable: true,
  get: function get() {
    return _f6Core.Shape;
  }
});
Object.defineProperty(exports, "Util", {
  enumerable: true,
  get: function get() {
    return _util.default;
  }
});
exports.registerGraph = exports.default = void 0;
Object.defineProperty(exports, "registerLayout", {
  enumerable: true,
  get: function get() {
    return _layout.registerLayout;
  }
});
var _tslib = require("tslib");
var _f6Core = require("@antv/f6-core");
Object.keys(_f6Core).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _f6Core[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _f6Core[key];
    }
  });
});
var Algorithm = _interopRequireWildcard(require("@antv/algorithm"));
exports.Algorithm = Algorithm;
var _graph = _interopRequireWildcard(require("./graph/graph"));
var _layout = require("./layout");
var _global = _interopRequireDefault(require("./global"));
var _util = _interopRequireDefault(require("./util"));
require("./element");
require("./behavior");
var _types = require("./types");
Object.keys(_types).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _types[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _types[key];
    }
  });
});
var _graph2 = require("./interface/graph");
Object.keys(_graph2).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _graph2[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _graph2[key];
    }
  });
});
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
var F6 = {
  version: _global.default.version,
  Graph: _graph.default,
  Util: _util.default,
  Layout: _layout.Layout,
  Layouts: _layout.Layouts,
  registerLayout: _layout.registerLayout,
  unRegisterLayout: _layout.unRegisterLayout,
  Global: _global.default,
  registerBehavior: _f6Core.registerBehavior,
  registerCombo: _f6Core.registerCombo,
  registerEdge: _f6Core.registerEdge,
  registerNode: _f6Core.registerNode,
  Algorithm: Algorithm,
  Arrow: _f6Core.Arrow,
  Marker: _f6Core.Marker,
  Shape: _f6Core.Shape
};
function registerExtenderWrapper(registerExtender) {
  return function () {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
      args[_i] = arguments[_i];
    }
    return registerExtender.apply(null, (0, _tslib.__spreadArray)((0, _tslib.__spreadArray)([], args, true), [F6], false));
  };
}
var registerGraph = registerExtenderWrapper(_graph.registerGraph);
exports.registerGraph = registerGraph;
F6.registerGraph = registerGraph;
var _default = F6;
exports.default = _default;