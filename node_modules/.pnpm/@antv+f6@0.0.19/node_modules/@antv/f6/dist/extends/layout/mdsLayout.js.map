{"version":3,"sources":["webpack://[name]/webpack/universalModuleDefinition","webpack://[name]/webpack/bootstrap","webpack://[name]/../src/index.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-array-max/lib-es6/index.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-array-min/lib-es6/index.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-array-rescale/lib-es6/index.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/inspect.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/util.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/stat.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/matrix.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/mathOperations.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/views/base.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/views/column.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/views/columnSelection.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/views/flipColumn.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/views/flipRow.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/views/row.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/views/rowSelection.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/views/selection.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/views/sub.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/views/transpose.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/wrap/WrapperMatrix1D.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/wrap/WrapperMatrix2D.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/wrap/wrap.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/dc/lu.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/dc/util.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/dc/qr.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/dc/svd.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/decompositions.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/determinant.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/linearDependencies.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/pseudoInverse.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/covariance.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/correlation.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/dc/evd.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/dc/cholesky.js","webpack://[name]//Users/bingren/Desktop/fork/F6/node_modules/ml-matrix/src/dc/nipals.js","webpack://[name]/../../src/layout/base.ts","webpack://[name]/../../src/util/index.ts","webpack://[name]/../../src/util/string.ts","webpack://[name]/../../src/util/array.ts","webpack://[name]/../../src/util/number.ts","webpack://[name]/../../src/util/math.ts","webpack://[name]/../../src/util/object.ts","webpack://[name]/../../src/layout/mds.ts","webpack://[name]/../../src/util/function.ts","webpack://[name]/./src/extends/layout/mdsLayout/index.ts"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","toString","isAnyArray","endsWith","max","input","options","arguments","length","undefined","TypeError","_options$fromIndex","fromIndex","_options$toIndex","toIndex","Number","isInteger","Error","maxValue","min","minValue","rescale","output","Array","currentMin","currentMax","RangeError","_options$min","autoMinMax","_options$max","factor","indent","repeat","indentData","inspectMatrixWithOptions","matrix","maxRows","maxColumns","maxNumSize","padMinus","constructor","inspectData","rows","columns","maxI","Math","maxJ","result","loop","j","line","push","formatNumber","join","num","formatNumber2","padEnd","len","str","fix","toFixed","startsWith","exp","toExponential","slice","checkRowIndex","index","outer","checkColumnIndex","checkRowVector","vector","to1DArray","checkColumnVector","checkRowIndices","rowIndices","checkColumnIndices","columnIndices","checkRange","startRow","endRow","startColumn","endColumn","checkNumber","newArray","array","checkNonEmpty","isEmpty","varianceByRow","unbiased","mean","cols","variance","sum1","sum2","x","varianceByColumn","varianceAll","size","centerByRow","set","centerByColumn","centerAll","getScaleByRow","scale","sum","pow","sqrt","scaleByRow","getScaleByColumn","scaleByColumn","getScaleAll","divider","scaleAll","AbstractMatrix","callback","copy","to2DArray","isSquare","previousColumn","isEchelonForm","checked","isReducedEchelonForm","k","clone","h","iMax","swapRows","tmp","echelonForm","maxRow","pivot","Matrix","setSubMatrix","mulS","row","rowVector","getRow","row1","row2","temp","column","columnVector","getColumn","column1","column2","by","NaN","fill","NEGATIVE_INFINITY","v","idx","POSITIVE_INFINITY","diag","type","vector2","isMatrix","vector1","dot","other","checkMatrix","Bcolj","Float64Array","a11","b11","a12","b12","a21","b21","a22","b22","m1","m2","m3","m4","m5","c00","c01","c10","c11","a00","a01","a02","a10","a20","b00","b01","b02","b10","b20","m6","m7","m8","m9","m12","m13","m14","m15","m16","m17","m18","c02","c12","c20","c21","c22","y","r1","c1","r2","c2","embed","mat","resultat","zeros","console","warn","blockMult","a","b","mmul","halfRows","parseInt","halfCols","subMatrix","add","sub","isFinite","newMatrix","setRow","setColumn","middle","ceil","first","last","q","AxI","kroneckerProduct","eye","IxB","compareFunction","compareNumbers","sort","indices","rowIndex","columnIndex","trace","sumByRow","sumByColumn","sumAll","productByRow","productByColumn","productAll","center","newRows","newColumns","newData","random","interval","round","data","matrix1","matrix2","klass","for","rand","randomInt","randInt","diagonal","identity","negate","neg","tensorProduct","nRows","nColumns","arrayData","every","element","from","splice","newRow","addS","addM","subS","subM","subtract","subtractS","subtractM","mul","mulM","multiply","multiplyS","multiplyM","div","divS","divM","divide","divideS","divideM","mod","modS","modM","modulus","modulusS","modulusM","and","andS","andM","or","orS","orM","xor","xorS","xorM","leftShift","leftShiftS","leftShiftM","signPropagatingRightShift","signPropagatingRightShiftS","signPropagatingRightShiftM","rightShift","rightShiftS","rightShiftM","zeroFillRightShift","zeroFillRightShiftS","zeroFillRightShiftM","not","abs","acos","acosh","asin","asinh","atan","atanh","cbrt","clz32","cos","cosh","expm1","floor","fround","log","log1p","log10","log2","sign","sin","sinh","tan","tanh","trunc","arg0","powS","powM","BaseView","MatrixColumnView","MatrixColumnSelectionView","MatrixFlipColumnView","MatrixFlipRowView","MatrixRowView","MatrixRowSelectionView","MatrixSelectionView","MatrixSubView","MatrixTransposeView","WrapperMatrix1D","_calculateIndex","WrapperMatrix2D","wrap","LuDecomposition","LUcolj","kmax","lu","pivotVector","pivotSign","LU","col","isSingular","count","X","subMatrixRow","determinant","hypotenuse","QrDecomposition","qr","rdiag","nrm","QR","Rdiag","isFullRank","SingularValueDecomposition","computeLeftSingularVectors","computeRightSingularVectors","autoTranspose","wantu","Boolean","wantv","swapped","transpose","aux","nu","ni","U","V","e","work","si","nct","nrt","mrc","pp","eps","EPSILON","kase","alpha","MIN_VALUE","isNaN","ks","f","cs","sn","sp","spm1","epm1","sk","ek","shift","g","Y","threshold","scols","Ls","rightSingularVectors","VL","vrows","urows","VLU","solve","vcols","ucols","tol","ii","inverse","useSVD","leftHandSide","rightHandSide","subMatrix0","subMatrix1","subMatrix2","xrange","exception","range","dependenciesOneRow","error","thresholdValue","thresholdError","returnArray","addRow","linearDependencies","results","Abis","svd","pseudoInverse","svdSolution","SVD","leftSingularVectors","covariance","xMatrix","yMatrix","yIsSame","cov","correlation","sdx","standardDeviation","sdy","corr","EigenvalueDecomposition","assumeSymmetric","isSymmetric","tred2","tql2","H","ort","orthes","hqr2","hh","dl1","c3","el1","s2","tst1","high","low","nn","w","ra","sa","vr","vi","notlast","cdivres","exshift","norm","z","iter","cdiv","xr","xi","yr","yi","CholeskyDecomposition","dimension","positiveDefinite","L","isPositiveDefinite","B","nipals","u","scaleScores","maxIterations","terminationCriteria","getColumnVector","tOld","diff","counter","xResidual","residual","yResidual","betas","Base","init","execute","nodes","edges","combos","reloadData","cfg","assign","positions","destroyed","__exportStar","val","fn","cache","camelizeRE","replace","_","toUpperCase","isArray","parseFloat","nodeIdxMap","degrees","forEach","source","target","adjMatrix","dist","Infinity","directed","nodeMap","node","id","sIndex","tIndex","ratio","traverseUp","children","Date","getTime","cp_1","map","cp_2","__assign","keys","_super","_this","updateCfg","__extends","MDSLayout","linkDistance","_a","onLayoutEnd","util_1","distances","handleInfinity","scaledD","scaledDistances","runMDS","M","ml_matrix_1","rowMeans","colMeans","totalMean","subRowVector","subColumnVector","ret","eigenValues","diagonalMatrix","toJSON","maxDistance","base_1"],"mappings":"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","file":"extends/layout/mdsLayout.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"MdsLayout\"] = factory();\n\telse\n\t\troot[\"MdsLayout\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 417);\n",null,"import { isAnyArray } from 'is-any-array';\n\nfunction max(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isAnyArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var _options$fromIndex = options.fromIndex,\n      fromIndex = _options$fromIndex === void 0 ? 0 : _options$fromIndex,\n      _options$toIndex = options.toIndex,\n      toIndex = _options$toIndex === void 0 ? input.length : _options$toIndex;\n\n  if (fromIndex < 0 || fromIndex >= input.length || !Number.isInteger(fromIndex)) {\n    throw new Error('fromIndex must be a positive integer smaller than length');\n  }\n\n  if (toIndex <= fromIndex || toIndex > input.length || !Number.isInteger(toIndex)) {\n    throw new Error('toIndex must be an integer greater than fromIndex and at most equal to length');\n  }\n\n  var maxValue = input[fromIndex];\n\n  for (var i = fromIndex + 1; i < toIndex; i++) {\n    if (input[i] > maxValue) maxValue = input[i];\n  }\n\n  return maxValue;\n}\n\nexport { max as default };\n","import { isAnyArray } from 'is-any-array';\n\nfunction min(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isAnyArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var _options$fromIndex = options.fromIndex,\n      fromIndex = _options$fromIndex === void 0 ? 0 : _options$fromIndex,\n      _options$toIndex = options.toIndex,\n      toIndex = _options$toIndex === void 0 ? input.length : _options$toIndex;\n\n  if (fromIndex < 0 || fromIndex >= input.length || !Number.isInteger(fromIndex)) {\n    throw new Error('fromIndex must be a positive integer smaller than length');\n  }\n\n  if (toIndex <= fromIndex || toIndex > input.length || !Number.isInteger(toIndex)) {\n    throw new Error('toIndex must be an integer greater than fromIndex and at most equal to length');\n  }\n\n  var minValue = input[fromIndex];\n\n  for (var i = fromIndex + 1; i < toIndex; i++) {\n    if (input[i] < minValue) minValue = input[i];\n  }\n\n  return minValue;\n}\n\nexport { min as default };\n","import { isAnyArray } from 'is-any-array';\nimport max from 'ml-array-max';\nimport min from 'ml-array-min';\n\nfunction rescale(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isAnyArray(input)) {\n    throw new TypeError('input must be an array');\n  } else if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var output;\n\n  if (options.output !== undefined) {\n    if (!isAnyArray(options.output)) {\n      throw new TypeError('output option must be an array if specified');\n    }\n\n    output = options.output;\n  } else {\n    output = new Array(input.length);\n  }\n\n  var currentMin = min(input);\n  var currentMax = max(input);\n\n  if (currentMin === currentMax) {\n    throw new RangeError('minimum and maximum input values are equal. Cannot rescale a constant array');\n  }\n\n  var _options$min = options.min,\n      minValue = _options$min === void 0 ? options.autoMinMax ? currentMin : 0 : _options$min,\n      _options$max = options.max,\n      maxValue = _options$max === void 0 ? options.autoMinMax ? currentMax : 1 : _options$max;\n\n  if (minValue >= maxValue) {\n    throw new RangeError('min option must be smaller than max option');\n  }\n\n  var factor = (maxValue - minValue) / (currentMax - currentMin);\n\n  for (var i = 0; i < input.length; i++) {\n    output[i] = (input[i] - currentMin) * factor + minValue;\n  }\n\n  return output;\n}\n\nexport { rescale as default };\n","const indent = ' '.repeat(2);\nconst indentData = ' '.repeat(4);\n\nexport function inspectMatrix() {\n  return inspectMatrixWithOptions(this);\n}\n\nexport function inspectMatrixWithOptions(matrix, options = {}) {\n  const {\n    maxRows = 15,\n    maxColumns = 10,\n    maxNumSize = 8,\n    padMinus = 'auto',\n  } = options;\n  return `${matrix.constructor.name} {\n${indent}[\n${indentData}${inspectData(matrix, maxRows, maxColumns, maxNumSize, padMinus)}\n${indent}]\n${indent}rows: ${matrix.rows}\n${indent}columns: ${matrix.columns}\n}`;\n}\n\nfunction inspectData(matrix, maxRows, maxColumns, maxNumSize, padMinus) {\n  const { rows, columns } = matrix;\n  const maxI = Math.min(rows, maxRows);\n  const maxJ = Math.min(columns, maxColumns);\n  const result = [];\n\n  if (padMinus === 'auto') {\n    padMinus = false;\n    loop: for (let i = 0; i < maxI; i++) {\n      for (let j = 0; j < maxJ; j++) {\n        if (matrix.get(i, j) < 0) {\n          padMinus = true;\n          break loop;\n        }\n      }\n    }\n  }\n\n  for (let i = 0; i < maxI; i++) {\n    let line = [];\n    for (let j = 0; j < maxJ; j++) {\n      line.push(formatNumber(matrix.get(i, j), maxNumSize, padMinus));\n    }\n    result.push(`${line.join(' ')}`);\n  }\n  if (maxJ !== columns) {\n    result[result.length - 1] += ` ... ${columns - maxColumns} more columns`;\n  }\n  if (maxI !== rows) {\n    result.push(`... ${rows - maxRows} more rows`);\n  }\n  return result.join(`\\n${indentData}`);\n}\n\nfunction formatNumber(num, maxNumSize, padMinus) {\n  return (\n    num >= 0 && padMinus\n      ? ` ${formatNumber2(num, maxNumSize - 1)}`\n      : formatNumber2(num, maxNumSize)\n  ).padEnd(maxNumSize);\n}\n\nfunction formatNumber2(num, len) {\n  // small.length numbers should be as is\n  let str = num.toString();\n  if (str.length <= len) return str;\n\n  // (7)'0.00123' is better then (7)'1.23e-2'\n  // (8)'0.000123' is worse then (7)'1.23e-3',\n  let fix = num.toFixed(len);\n  if (fix.length > len) {\n    fix = num.toFixed(Math.max(0, len - (fix.length - len)));\n  }\n  if (\n    fix.length <= len &&\n    !fix.startsWith('0.000') &&\n    !fix.startsWith('-0.000')\n  ) {\n    return fix;\n  }\n\n  // well, if it's still too long the user should've used longer numbers\n  let exp = num.toExponential(len);\n  if (exp.length > len) {\n    exp = num.toExponential(Math.max(0, len - (exp.length - len)));\n  }\n  return exp.slice(0);\n}\n","import { isAnyArray } from 'is-any-array';\n\n/**\n * @private\n * Check that a row index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexport function checkRowIndex(matrix, index, outer) {\n  let max = outer ? matrix.rows : matrix.rows - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Row index out of range');\n  }\n}\n\n/**\n * @private\n * Check that a column index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexport function checkColumnIndex(matrix, index, outer) {\n  let max = outer ? matrix.columns : matrix.columns - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Column index out of range');\n  }\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexport function checkRowVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.columns) {\n    throw new RangeError(\n      'vector size must be the same as the number of columns',\n    );\n  }\n  return vector;\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexport function checkColumnVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.rows) {\n    throw new RangeError('vector size must be the same as the number of rows');\n  }\n  return vector;\n}\n\nexport function checkRowIndices(matrix, rowIndices) {\n  if (!isAnyArray(rowIndices)) {\n    throw new TypeError('row indices must be an array');\n  }\n\n  for (let i = 0; i < rowIndices.length; i++) {\n    if (rowIndices[i] < 0 || rowIndices[i] >= matrix.rows) {\n      throw new RangeError('row indices are out of range');\n    }\n  }\n}\n\nexport function checkColumnIndices(matrix, columnIndices) {\n  if (!isAnyArray(columnIndices)) {\n    throw new TypeError('column indices must be an array');\n  }\n\n  for (let i = 0; i < columnIndices.length; i++) {\n    if (columnIndices[i] < 0 || columnIndices[i] >= matrix.columns) {\n      throw new RangeError('column indices are out of range');\n    }\n  }\n}\n\nexport function checkRange(matrix, startRow, endRow, startColumn, endColumn) {\n  if (arguments.length !== 5) {\n    throw new RangeError('expected 4 arguments');\n  }\n  checkNumber('startRow', startRow);\n  checkNumber('endRow', endRow);\n  checkNumber('startColumn', startColumn);\n  checkNumber('endColumn', endColumn);\n  if (\n    startRow > endRow ||\n    startColumn > endColumn ||\n    startRow < 0 ||\n    startRow >= matrix.rows ||\n    endRow < 0 ||\n    endRow >= matrix.rows ||\n    startColumn < 0 ||\n    startColumn >= matrix.columns ||\n    endColumn < 0 ||\n    endColumn >= matrix.columns\n  ) {\n    throw new RangeError('Submatrix indices are out of range');\n  }\n}\n\nexport function newArray(length, value = 0) {\n  let array = [];\n  for (let i = 0; i < length; i++) {\n    array.push(value);\n  }\n  return array;\n}\n\nfunction checkNumber(name, value) {\n  if (typeof value !== 'number') {\n    throw new TypeError(`${name} must be a number`);\n  }\n}\n\nexport function checkNonEmpty(matrix) {\n  if (matrix.isEmpty()) {\n    throw new Error('Empty matrix has no elements to index');\n  }\n}\n","import { newArray } from './util';\n\nexport function sumByRow(matrix) {\n  let sum = newArray(matrix.rows);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[i] += matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function sumByColumn(matrix) {\n  let sum = newArray(matrix.columns);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[j] += matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function sumAll(matrix) {\n  let v = 0;\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      v += matrix.get(i, j);\n    }\n  }\n  return v;\n}\n\nexport function productByRow(matrix) {\n  let sum = newArray(matrix.rows, 1);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[i] *= matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function productByColumn(matrix) {\n  let sum = newArray(matrix.columns, 1);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[j] *= matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function productAll(matrix) {\n  let v = 1;\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      v *= matrix.get(i, j);\n    }\n  }\n  return v;\n}\n\nexport function varianceByRow(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const variance = [];\n\n  for (let i = 0; i < rows; i++) {\n    let sum1 = 0;\n    let sum2 = 0;\n    let x = 0;\n    for (let j = 0; j < cols; j++) {\n      x = matrix.get(i, j) - mean[i];\n      sum1 += x;\n      sum2 += x * x;\n    }\n    if (unbiased) {\n      variance.push((sum2 - (sum1 * sum1) / cols) / (cols - 1));\n    } else {\n      variance.push((sum2 - (sum1 * sum1) / cols) / cols);\n    }\n  }\n  return variance;\n}\n\nexport function varianceByColumn(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const variance = [];\n\n  for (let j = 0; j < cols; j++) {\n    let sum1 = 0;\n    let sum2 = 0;\n    let x = 0;\n    for (let i = 0; i < rows; i++) {\n      x = matrix.get(i, j) - mean[j];\n      sum1 += x;\n      sum2 += x * x;\n    }\n    if (unbiased) {\n      variance.push((sum2 - (sum1 * sum1) / rows) / (rows - 1));\n    } else {\n      variance.push((sum2 - (sum1 * sum1) / rows) / rows);\n    }\n  }\n  return variance;\n}\n\nexport function varianceAll(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const size = rows * cols;\n\n  let sum1 = 0;\n  let sum2 = 0;\n  let x = 0;\n  for (let i = 0; i < rows; i++) {\n    for (let j = 0; j < cols; j++) {\n      x = matrix.get(i, j) - mean;\n      sum1 += x;\n      sum2 += x * x;\n    }\n  }\n  if (unbiased) {\n    return (sum2 - (sum1 * sum1) / size) / (size - 1);\n  } else {\n    return (sum2 - (sum1 * sum1) / size) / size;\n  }\n}\n\nexport function centerByRow(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean[i]);\n    }\n  }\n}\n\nexport function centerByColumn(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean[j]);\n    }\n  }\n}\n\nexport function centerAll(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean);\n    }\n  }\n}\n\nexport function getScaleByRow(matrix) {\n  const scale = [];\n  for (let i = 0; i < matrix.rows; i++) {\n    let sum = 0;\n    for (let j = 0; j < matrix.columns; j++) {\n      sum += Math.pow(matrix.get(i, j), 2) / (matrix.columns - 1);\n    }\n    scale.push(Math.sqrt(sum));\n  }\n  return scale;\n}\n\nexport function scaleByRow(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale[i]);\n    }\n  }\n}\n\nexport function getScaleByColumn(matrix) {\n  const scale = [];\n  for (let j = 0; j < matrix.columns; j++) {\n    let sum = 0;\n    for (let i = 0; i < matrix.rows; i++) {\n      sum += Math.pow(matrix.get(i, j), 2) / (matrix.rows - 1);\n    }\n    scale.push(Math.sqrt(sum));\n  }\n  return scale;\n}\n\nexport function scaleByColumn(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale[j]);\n    }\n  }\n}\n\nexport function getScaleAll(matrix) {\n  const divider = matrix.size - 1;\n  let sum = 0;\n  for (let j = 0; j < matrix.columns; j++) {\n    for (let i = 0; i < matrix.rows; i++) {\n      sum += Math.pow(matrix.get(i, j), 2) / divider;\n    }\n  }\n  return Math.sqrt(sum);\n}\n\nexport function scaleAll(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale);\n    }\n  }\n}\n","import { isAnyArray } from 'is-any-array';\nimport rescale from 'ml-array-rescale';\n\nimport { inspectMatrix, inspectMatrixWithOptions } from './inspect';\nimport { installMathOperations } from './mathOperations';\nimport {\n  sumByRow,\n  sumByColumn,\n  sumAll,\n  productByRow,\n  productByColumn,\n  productAll,\n  varianceByRow,\n  varianceByColumn,\n  varianceAll,\n  centerByRow,\n  centerByColumn,\n  centerAll,\n  scaleByRow,\n  scaleByColumn,\n  scaleAll,\n  getScaleByRow,\n  getScaleByColumn,\n  getScaleAll,\n} from './stat';\nimport {\n  checkRowVector,\n  checkRowIndex,\n  checkColumnIndex,\n  checkColumnVector,\n  checkRange,\n  checkNonEmpty,\n  checkRowIndices,\n  checkColumnIndices,\n} from './util';\n\nexport class AbstractMatrix {\n  static from1DArray(newRows, newColumns, newData) {\n    let length = newRows * newColumns;\n    if (length !== newData.length) {\n      throw new RangeError('data length does not match given dimensions');\n    }\n    let newMatrix = new Matrix(newRows, newColumns);\n    for (let row = 0; row < newRows; row++) {\n      for (let column = 0; column < newColumns; column++) {\n        newMatrix.set(row, column, newData[row * newColumns + column]);\n      }\n    }\n    return newMatrix;\n  }\n\n  static rowVector(newData) {\n    let vector = new Matrix(1, newData.length);\n    for (let i = 0; i < newData.length; i++) {\n      vector.set(0, i, newData[i]);\n    }\n    return vector;\n  }\n\n  static columnVector(newData) {\n    let vector = new Matrix(newData.length, 1);\n    for (let i = 0; i < newData.length; i++) {\n      vector.set(i, 0, newData[i]);\n    }\n    return vector;\n  }\n\n  static zeros(rows, columns) {\n    return new Matrix(rows, columns);\n  }\n\n  static ones(rows, columns) {\n    return new Matrix(rows, columns).fill(1);\n  }\n\n  static rand(rows, columns, options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { random = Math.random } = options;\n    let matrix = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        matrix.set(i, j, random());\n      }\n    }\n    return matrix;\n  }\n\n  static randInt(rows, columns, options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1000, random = Math.random } = options;\n    if (!Number.isInteger(min)) throw new TypeError('min must be an integer');\n    if (!Number.isInteger(max)) throw new TypeError('max must be an integer');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let interval = max - min;\n    let matrix = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        let value = min + Math.round(random() * interval);\n        matrix.set(i, j, value);\n      }\n    }\n    return matrix;\n  }\n\n  static eye(rows, columns, value) {\n    if (columns === undefined) columns = rows;\n    if (value === undefined) value = 1;\n    let min = Math.min(rows, columns);\n    let matrix = this.zeros(rows, columns);\n    for (let i = 0; i < min; i++) {\n      matrix.set(i, i, value);\n    }\n    return matrix;\n  }\n\n  static diag(data, rows, columns) {\n    let l = data.length;\n    if (rows === undefined) rows = l;\n    if (columns === undefined) columns = rows;\n    let min = Math.min(l, rows, columns);\n    let matrix = this.zeros(rows, columns);\n    for (let i = 0; i < min; i++) {\n      matrix.set(i, i, data[i]);\n    }\n    return matrix;\n  }\n\n  static min(matrix1, matrix2) {\n    matrix1 = this.checkMatrix(matrix1);\n    matrix2 = this.checkMatrix(matrix2);\n    let rows = matrix1.rows;\n    let columns = matrix1.columns;\n    let result = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        result.set(i, j, Math.min(matrix1.get(i, j), matrix2.get(i, j)));\n      }\n    }\n    return result;\n  }\n\n  static max(matrix1, matrix2) {\n    matrix1 = this.checkMatrix(matrix1);\n    matrix2 = this.checkMatrix(matrix2);\n    let rows = matrix1.rows;\n    let columns = matrix1.columns;\n    let result = new this(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        result.set(i, j, Math.max(matrix1.get(i, j), matrix2.get(i, j)));\n      }\n    }\n    return result;\n  }\n\n  static checkMatrix(value) {\n    return AbstractMatrix.isMatrix(value) ? value : new Matrix(value);\n  }\n\n  static isMatrix(value) {\n    return value != null && value.klass === 'Matrix';\n  }\n\n  get size() {\n    return this.rows * this.columns;\n  }\n\n  apply(callback) {\n    if (typeof callback !== 'function') {\n      throw new TypeError('callback must be a function');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        callback.call(this, i, j);\n      }\n    }\n    return this;\n  }\n\n  to1DArray() {\n    let array = [];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        array.push(this.get(i, j));\n      }\n    }\n    return array;\n  }\n\n  to2DArray() {\n    let copy = [];\n    for (let i = 0; i < this.rows; i++) {\n      copy.push([]);\n      for (let j = 0; j < this.columns; j++) {\n        copy[i].push(this.get(i, j));\n      }\n    }\n    return copy;\n  }\n\n  toJSON() {\n    return this.to2DArray();\n  }\n\n  isRowVector() {\n    return this.rows === 1;\n  }\n\n  isColumnVector() {\n    return this.columns === 1;\n  }\n\n  isVector() {\n    return this.rows === 1 || this.columns === 1;\n  }\n\n  isSquare() {\n    return this.rows === this.columns;\n  }\n\n  isEmpty() {\n    return this.rows === 0 || this.columns === 0;\n  }\n\n  isSymmetric() {\n    if (this.isSquare()) {\n      for (let i = 0; i < this.rows; i++) {\n        for (let j = 0; j <= i; j++) {\n          if (this.get(i, j) !== this.get(j, i)) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n    return false;\n  }\n\n  isEchelonForm() {\n    let i = 0;\n    let j = 0;\n    let previousColumn = -1;\n    let isEchelonForm = true;\n    let checked = false;\n    while (i < this.rows && isEchelonForm) {\n      j = 0;\n      checked = false;\n      while (j < this.columns && checked === false) {\n        if (this.get(i, j) === 0) {\n          j++;\n        } else if (this.get(i, j) === 1 && j > previousColumn) {\n          checked = true;\n          previousColumn = j;\n        } else {\n          isEchelonForm = false;\n          checked = true;\n        }\n      }\n      i++;\n    }\n    return isEchelonForm;\n  }\n\n  isReducedEchelonForm() {\n    let i = 0;\n    let j = 0;\n    let previousColumn = -1;\n    let isReducedEchelonForm = true;\n    let checked = false;\n    while (i < this.rows && isReducedEchelonForm) {\n      j = 0;\n      checked = false;\n      while (j < this.columns && checked === false) {\n        if (this.get(i, j) === 0) {\n          j++;\n        } else if (this.get(i, j) === 1 && j > previousColumn) {\n          checked = true;\n          previousColumn = j;\n        } else {\n          isReducedEchelonForm = false;\n          checked = true;\n        }\n      }\n      for (let k = j + 1; k < this.rows; k++) {\n        if (this.get(i, k) !== 0) {\n          isReducedEchelonForm = false;\n        }\n      }\n      i++;\n    }\n    return isReducedEchelonForm;\n  }\n\n  echelonForm() {\n    let result = this.clone();\n    let h = 0;\n    let k = 0;\n    while (h < result.rows && k < result.columns) {\n      let iMax = h;\n      for (let i = h; i < result.rows; i++) {\n        if (result.get(i, k) > result.get(iMax, k)) {\n          iMax = i;\n        }\n      }\n      if (result.get(iMax, k) === 0) {\n        k++;\n      } else {\n        result.swapRows(h, iMax);\n        let tmp = result.get(h, k);\n        for (let j = k; j < result.columns; j++) {\n          result.set(h, j, result.get(h, j) / tmp);\n        }\n        for (let i = h + 1; i < result.rows; i++) {\n          let factor = result.get(i, k) / result.get(h, k);\n          result.set(i, k, 0);\n          for (let j = k + 1; j < result.columns; j++) {\n            result.set(i, j, result.get(i, j) - result.get(h, j) * factor);\n          }\n        }\n        h++;\n        k++;\n      }\n    }\n    return result;\n  }\n\n  reducedEchelonForm() {\n    let result = this.echelonForm();\n    let m = result.columns;\n    let n = result.rows;\n    let h = n - 1;\n    while (h >= 0) {\n      if (result.maxRow(h) === 0) {\n        h--;\n      } else {\n        let p = 0;\n        let pivot = false;\n        while (p < n && pivot === false) {\n          if (result.get(h, p) === 1) {\n            pivot = true;\n          } else {\n            p++;\n          }\n        }\n        for (let i = 0; i < h; i++) {\n          let factor = result.get(i, p);\n          for (let j = p; j < m; j++) {\n            let tmp = result.get(i, j) - factor * result.get(h, j);\n            result.set(i, j, tmp);\n          }\n        }\n        h--;\n      }\n    }\n    return result;\n  }\n\n  set() {\n    throw new Error('set method is unimplemented');\n  }\n\n  get() {\n    throw new Error('get method is unimplemented');\n  }\n\n  repeat(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { rows = 1, columns = 1 } = options;\n    if (!Number.isInteger(rows) || rows <= 0) {\n      throw new TypeError('rows must be a positive integer');\n    }\n    if (!Number.isInteger(columns) || columns <= 0) {\n      throw new TypeError('columns must be a positive integer');\n    }\n    let matrix = new Matrix(this.rows * rows, this.columns * columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        matrix.setSubMatrix(this, this.rows * i, this.columns * j);\n      }\n    }\n    return matrix;\n  }\n\n  fill(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, value);\n      }\n    }\n    return this;\n  }\n\n  neg() {\n    return this.mulS(-1);\n  }\n\n  getRow(index) {\n    checkRowIndex(this, index);\n    let row = [];\n    for (let i = 0; i < this.columns; i++) {\n      row.push(this.get(index, i));\n    }\n    return row;\n  }\n\n  getRowVector(index) {\n    return Matrix.rowVector(this.getRow(index));\n  }\n\n  setRow(index, array) {\n    checkRowIndex(this, index);\n    array = checkRowVector(this, array);\n    for (let i = 0; i < this.columns; i++) {\n      this.set(index, i, array[i]);\n    }\n    return this;\n  }\n\n  swapRows(row1, row2) {\n    checkRowIndex(this, row1);\n    checkRowIndex(this, row2);\n    for (let i = 0; i < this.columns; i++) {\n      let temp = this.get(row1, i);\n      this.set(row1, i, this.get(row2, i));\n      this.set(row2, i, temp);\n    }\n    return this;\n  }\n\n  getColumn(index) {\n    checkColumnIndex(this, index);\n    let column = [];\n    for (let i = 0; i < this.rows; i++) {\n      column.push(this.get(i, index));\n    }\n    return column;\n  }\n\n  getColumnVector(index) {\n    return Matrix.columnVector(this.getColumn(index));\n  }\n\n  setColumn(index, array) {\n    checkColumnIndex(this, index);\n    array = checkColumnVector(this, array);\n    for (let i = 0; i < this.rows; i++) {\n      this.set(i, index, array[i]);\n    }\n    return this;\n  }\n\n  swapColumns(column1, column2) {\n    checkColumnIndex(this, column1);\n    checkColumnIndex(this, column2);\n    for (let i = 0; i < this.rows; i++) {\n      let temp = this.get(i, column1);\n      this.set(i, column1, this.get(i, column2));\n      this.set(i, column2, temp);\n    }\n    return this;\n  }\n\n  addRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + vector[j]);\n      }\n    }\n    return this;\n  }\n\n  subRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - vector[j]);\n      }\n    }\n    return this;\n  }\n\n  mulRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * vector[j]);\n      }\n    }\n    return this;\n  }\n\n  divRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / vector[j]);\n      }\n    }\n    return this;\n  }\n\n  addColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + vector[i]);\n      }\n    }\n    return this;\n  }\n\n  subColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - vector[i]);\n      }\n    }\n    return this;\n  }\n\n  mulColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * vector[i]);\n      }\n    }\n    return this;\n  }\n\n  divColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / vector[i]);\n      }\n    }\n    return this;\n  }\n\n  mulRow(index, value) {\n    checkRowIndex(this, index);\n    for (let i = 0; i < this.columns; i++) {\n      this.set(index, i, this.get(index, i) * value);\n    }\n    return this;\n  }\n\n  mulColumn(index, value) {\n    checkColumnIndex(this, index);\n    for (let i = 0; i < this.rows; i++) {\n      this.set(i, index, this.get(i, index) * value);\n    }\n    return this;\n  }\n\n  max(by) {\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    switch (by) {\n      case 'row': {\n        const max = new Array(this.rows).fill(Number.NEGATIVE_INFINITY);\n        for (let row = 0; row < this.rows; row++) {\n          for (let column = 0; column < this.columns; column++) {\n            if (this.get(row, column) > max[row]) {\n              max[row] = this.get(row, column);\n            }\n          }\n        }\n        return max;\n      }\n      case 'column': {\n        const max = new Array(this.columns).fill(Number.NEGATIVE_INFINITY);\n        for (let row = 0; row < this.rows; row++) {\n          for (let column = 0; column < this.columns; column++) {\n            if (this.get(row, column) > max[column]) {\n              max[column] = this.get(row, column);\n            }\n          }\n        }\n        return max;\n      }\n      case undefined: {\n        let max = this.get(0, 0);\n        for (let row = 0; row < this.rows; row++) {\n          for (let column = 0; column < this.columns; column++) {\n            if (this.get(row, column) > max) {\n              max = this.get(row, column);\n            }\n          }\n        }\n        return max;\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  maxIndex() {\n    checkNonEmpty(this);\n    let v = this.get(0, 0);\n    let idx = [0, 0];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) > v) {\n          v = this.get(i, j);\n          idx[0] = i;\n          idx[1] = j;\n        }\n      }\n    }\n    return idx;\n  }\n\n  min(by) {\n    if (this.isEmpty()) {\n      return NaN;\n    }\n\n    switch (by) {\n      case 'row': {\n        const min = new Array(this.rows).fill(Number.POSITIVE_INFINITY);\n        for (let row = 0; row < this.rows; row++) {\n          for (let column = 0; column < this.columns; column++) {\n            if (this.get(row, column) < min[row]) {\n              min[row] = this.get(row, column);\n            }\n          }\n        }\n        return min;\n      }\n      case 'column': {\n        const min = new Array(this.columns).fill(Number.POSITIVE_INFINITY);\n        for (let row = 0; row < this.rows; row++) {\n          for (let column = 0; column < this.columns; column++) {\n            if (this.get(row, column) < min[column]) {\n              min[column] = this.get(row, column);\n            }\n          }\n        }\n        return min;\n      }\n      case undefined: {\n        let min = this.get(0, 0);\n        for (let row = 0; row < this.rows; row++) {\n          for (let column = 0; column < this.columns; column++) {\n            if (this.get(row, column) < min) {\n              min = this.get(row, column);\n            }\n          }\n        }\n        return min;\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  minIndex() {\n    checkNonEmpty(this);\n    let v = this.get(0, 0);\n    let idx = [0, 0];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) < v) {\n          v = this.get(i, j);\n          idx[0] = i;\n          idx[1] = j;\n        }\n      }\n    }\n    return idx;\n  }\n\n  maxRow(row) {\n    checkRowIndex(this, row);\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(row, 0);\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) > v) {\n        v = this.get(row, i);\n      }\n    }\n    return v;\n  }\n\n  maxRowIndex(row) {\n    checkRowIndex(this, row);\n    checkNonEmpty(this);\n    let v = this.get(row, 0);\n    let idx = [row, 0];\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) > v) {\n        v = this.get(row, i);\n        idx[1] = i;\n      }\n    }\n    return idx;\n  }\n\n  minRow(row) {\n    checkRowIndex(this, row);\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(row, 0);\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) < v) {\n        v = this.get(row, i);\n      }\n    }\n    return v;\n  }\n\n  minRowIndex(row) {\n    checkRowIndex(this, row);\n    checkNonEmpty(this);\n    let v = this.get(row, 0);\n    let idx = [row, 0];\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) < v) {\n        v = this.get(row, i);\n        idx[1] = i;\n      }\n    }\n    return idx;\n  }\n\n  maxColumn(column) {\n    checkColumnIndex(this, column);\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(0, column);\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) > v) {\n        v = this.get(i, column);\n      }\n    }\n    return v;\n  }\n\n  maxColumnIndex(column) {\n    checkColumnIndex(this, column);\n    checkNonEmpty(this);\n    let v = this.get(0, column);\n    let idx = [0, column];\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) > v) {\n        v = this.get(i, column);\n        idx[0] = i;\n      }\n    }\n    return idx;\n  }\n\n  minColumn(column) {\n    checkColumnIndex(this, column);\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(0, column);\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) < v) {\n        v = this.get(i, column);\n      }\n    }\n    return v;\n  }\n\n  minColumnIndex(column) {\n    checkColumnIndex(this, column);\n    checkNonEmpty(this);\n    let v = this.get(0, column);\n    let idx = [0, column];\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) < v) {\n        v = this.get(i, column);\n        idx[0] = i;\n      }\n    }\n    return idx;\n  }\n\n  diag() {\n    let min = Math.min(this.rows, this.columns);\n    let diag = [];\n    for (let i = 0; i < min; i++) {\n      diag.push(this.get(i, i));\n    }\n    return diag;\n  }\n\n  norm(type = 'frobenius') {\n    let result = 0;\n    if (type === 'max') {\n      return this.max();\n    } else if (type === 'frobenius') {\n      for (let i = 0; i < this.rows; i++) {\n        for (let j = 0; j < this.columns; j++) {\n          result = result + this.get(i, j) * this.get(i, j);\n        }\n      }\n      return Math.sqrt(result);\n    } else {\n      throw new RangeError(`unknown norm type: ${type}`);\n    }\n  }\n\n  cumulativeSum() {\n    let sum = 0;\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        sum += this.get(i, j);\n        this.set(i, j, sum);\n      }\n    }\n    return this;\n  }\n\n  dot(vector2) {\n    if (AbstractMatrix.isMatrix(vector2)) vector2 = vector2.to1DArray();\n    let vector1 = this.to1DArray();\n    if (vector1.length !== vector2.length) {\n      throw new RangeError('vectors do not have the same size');\n    }\n    let dot = 0;\n    for (let i = 0; i < vector1.length; i++) {\n      dot += vector1[i] * vector2[i];\n    }\n    return dot;\n  }\n\n  mmul(other) {\n    other = Matrix.checkMatrix(other);\n\n    let m = this.rows;\n    let n = this.columns;\n    let p = other.columns;\n\n    let result = new Matrix(m, p);\n\n    let Bcolj = new Float64Array(n);\n    for (let j = 0; j < p; j++) {\n      for (let k = 0; k < n; k++) {\n        Bcolj[k] = other.get(k, j);\n      }\n\n      for (let i = 0; i < m; i++) {\n        let s = 0;\n        for (let k = 0; k < n; k++) {\n          s += this.get(i, k) * Bcolj[k];\n        }\n\n        result.set(i, j, s);\n      }\n    }\n    return result;\n  }\n\n  strassen2x2(other) {\n    other = Matrix.checkMatrix(other);\n    let result = new Matrix(2, 2);\n    const a11 = this.get(0, 0);\n    const b11 = other.get(0, 0);\n    const a12 = this.get(0, 1);\n    const b12 = other.get(0, 1);\n    const a21 = this.get(1, 0);\n    const b21 = other.get(1, 0);\n    const a22 = this.get(1, 1);\n    const b22 = other.get(1, 1);\n\n    // Compute intermediate values.\n    const m1 = (a11 + a22) * (b11 + b22);\n    const m2 = (a21 + a22) * b11;\n    const m3 = a11 * (b12 - b22);\n    const m4 = a22 * (b21 - b11);\n    const m5 = (a11 + a12) * b22;\n    const m6 = (a21 - a11) * (b11 + b12);\n    const m7 = (a12 - a22) * (b21 + b22);\n\n    // Combine intermediate values into the output.\n    const c00 = m1 + m4 - m5 + m7;\n    const c01 = m3 + m5;\n    const c10 = m2 + m4;\n    const c11 = m1 - m2 + m3 + m6;\n\n    result.set(0, 0, c00);\n    result.set(0, 1, c01);\n    result.set(1, 0, c10);\n    result.set(1, 1, c11);\n    return result;\n  }\n\n  strassen3x3(other) {\n    other = Matrix.checkMatrix(other);\n    let result = new Matrix(3, 3);\n\n    const a00 = this.get(0, 0);\n    const a01 = this.get(0, 1);\n    const a02 = this.get(0, 2);\n    const a10 = this.get(1, 0);\n    const a11 = this.get(1, 1);\n    const a12 = this.get(1, 2);\n    const a20 = this.get(2, 0);\n    const a21 = this.get(2, 1);\n    const a22 = this.get(2, 2);\n\n    const b00 = other.get(0, 0);\n    const b01 = other.get(0, 1);\n    const b02 = other.get(0, 2);\n    const b10 = other.get(1, 0);\n    const b11 = other.get(1, 1);\n    const b12 = other.get(1, 2);\n    const b20 = other.get(2, 0);\n    const b21 = other.get(2, 1);\n    const b22 = other.get(2, 2);\n\n    const m1 = (a00 + a01 + a02 - a10 - a11 - a21 - a22) * b11;\n    const m2 = (a00 - a10) * (-b01 + b11);\n    const m3 = a11 * (-b00 + b01 + b10 - b11 - b12 - b20 + b22);\n    const m4 = (-a00 + a10 + a11) * (b00 - b01 + b11);\n    const m5 = (a10 + a11) * (-b00 + b01);\n    const m6 = a00 * b00;\n    const m7 = (-a00 + a20 + a21) * (b00 - b02 + b12);\n    const m8 = (-a00 + a20) * (b02 - b12);\n    const m9 = (a20 + a21) * (-b00 + b02);\n    const m10 = (a00 + a01 + a02 - a11 - a12 - a20 - a21) * b12;\n    const m11 = a21 * (-b00 + b02 + b10 - b11 - b12 - b20 + b21);\n    const m12 = (-a02 + a21 + a22) * (b11 + b20 - b21);\n    const m13 = (a02 - a22) * (b11 - b21);\n    const m14 = a02 * b20;\n    const m15 = (a21 + a22) * (-b20 + b21);\n    const m16 = (-a02 + a11 + a12) * (b12 + b20 - b22);\n    const m17 = (a02 - a12) * (b12 - b22);\n    const m18 = (a11 + a12) * (-b20 + b22);\n    const m19 = a01 * b10;\n    const m20 = a12 * b21;\n    const m21 = a10 * b02;\n    const m22 = a20 * b01;\n    const m23 = a22 * b22;\n\n    const c00 = m6 + m14 + m19;\n    const c01 = m1 + m4 + m5 + m6 + m12 + m14 + m15;\n    const c02 = m6 + m7 + m9 + m10 + m14 + m16 + m18;\n    const c10 = m2 + m3 + m4 + m6 + m14 + m16 + m17;\n    const c11 = m2 + m4 + m5 + m6 + m20;\n    const c12 = m14 + m16 + m17 + m18 + m21;\n    const c20 = m6 + m7 + m8 + m11 + m12 + m13 + m14;\n    const c21 = m12 + m13 + m14 + m15 + m22;\n    const c22 = m6 + m7 + m8 + m9 + m23;\n\n    result.set(0, 0, c00);\n    result.set(0, 1, c01);\n    result.set(0, 2, c02);\n    result.set(1, 0, c10);\n    result.set(1, 1, c11);\n    result.set(1, 2, c12);\n    result.set(2, 0, c20);\n    result.set(2, 1, c21);\n    result.set(2, 2, c22);\n    return result;\n  }\n\n  mmulStrassen(y) {\n    y = Matrix.checkMatrix(y);\n    let x = this.clone();\n    let r1 = x.rows;\n    let c1 = x.columns;\n    let r2 = y.rows;\n    let c2 = y.columns;\n    if (c1 !== r2) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `Multiplying ${r1} x ${c1} and ${r2} x ${c2} matrix: dimensions do not match.`,\n      );\n    }\n\n    // Put a matrix into the top left of a matrix of zeros.\n    // `rows` and `cols` are the dimensions of the output matrix.\n    function embed(mat, rows, cols) {\n      let r = mat.rows;\n      let c = mat.columns;\n      if (r === rows && c === cols) {\n        return mat;\n      } else {\n        let resultat = AbstractMatrix.zeros(rows, cols);\n        resultat = resultat.setSubMatrix(mat, 0, 0);\n        return resultat;\n      }\n    }\n\n    // Make sure both matrices are the same size.\n    // This is exclusively for simplicity:\n    // this algorithm can be implemented with matrices of different sizes.\n\n    let r = Math.max(r1, r2);\n    let c = Math.max(c1, c2);\n    x = embed(x, r, c);\n    y = embed(y, r, c);\n\n    // Our recursive multiplication function.\n    function blockMult(a, b, rows, cols) {\n      // For small matrices, resort to naive multiplication.\n      if (rows <= 512 || cols <= 512) {\n        return a.mmul(b); // a is equivalent to this\n      }\n\n      // Apply dynamic padding.\n      if (rows % 2 === 1 && cols % 2 === 1) {\n        a = embed(a, rows + 1, cols + 1);\n        b = embed(b, rows + 1, cols + 1);\n      } else if (rows % 2 === 1) {\n        a = embed(a, rows + 1, cols);\n        b = embed(b, rows + 1, cols);\n      } else if (cols % 2 === 1) {\n        a = embed(a, rows, cols + 1);\n        b = embed(b, rows, cols + 1);\n      }\n\n      let halfRows = parseInt(a.rows / 2, 10);\n      let halfCols = parseInt(a.columns / 2, 10);\n      // Subdivide input matrices.\n      let a11 = a.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n      let b11 = b.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n\n      let a12 = a.subMatrix(0, halfRows - 1, halfCols, a.columns - 1);\n      let b12 = b.subMatrix(0, halfRows - 1, halfCols, b.columns - 1);\n\n      let a21 = a.subMatrix(halfRows, a.rows - 1, 0, halfCols - 1);\n      let b21 = b.subMatrix(halfRows, b.rows - 1, 0, halfCols - 1);\n\n      let a22 = a.subMatrix(halfRows, a.rows - 1, halfCols, a.columns - 1);\n      let b22 = b.subMatrix(halfRows, b.rows - 1, halfCols, b.columns - 1);\n\n      // Compute intermediate values.\n      let m1 = blockMult(\n        AbstractMatrix.add(a11, a22),\n        AbstractMatrix.add(b11, b22),\n        halfRows,\n        halfCols,\n      );\n      let m2 = blockMult(AbstractMatrix.add(a21, a22), b11, halfRows, halfCols);\n      let m3 = blockMult(a11, AbstractMatrix.sub(b12, b22), halfRows, halfCols);\n      let m4 = blockMult(a22, AbstractMatrix.sub(b21, b11), halfRows, halfCols);\n      let m5 = blockMult(AbstractMatrix.add(a11, a12), b22, halfRows, halfCols);\n      let m6 = blockMult(\n        AbstractMatrix.sub(a21, a11),\n        AbstractMatrix.add(b11, b12),\n        halfRows,\n        halfCols,\n      );\n      let m7 = blockMult(\n        AbstractMatrix.sub(a12, a22),\n        AbstractMatrix.add(b21, b22),\n        halfRows,\n        halfCols,\n      );\n\n      // Combine intermediate values into the output.\n      let c11 = AbstractMatrix.add(m1, m4);\n      c11.sub(m5);\n      c11.add(m7);\n      let c12 = AbstractMatrix.add(m3, m5);\n      let c21 = AbstractMatrix.add(m2, m4);\n      let c22 = AbstractMatrix.sub(m1, m2);\n      c22.add(m3);\n      c22.add(m6);\n\n      // Crop output to the desired size (undo dynamic padding).\n      let resultat = AbstractMatrix.zeros(2 * c11.rows, 2 * c11.columns);\n      resultat = resultat.setSubMatrix(c11, 0, 0);\n      resultat = resultat.setSubMatrix(c12, c11.rows, 0);\n      resultat = resultat.setSubMatrix(c21, 0, c11.columns);\n      resultat = resultat.setSubMatrix(c22, c11.rows, c11.columns);\n      return resultat.subMatrix(0, rows - 1, 0, cols - 1);\n    }\n\n    return blockMult(x, y, r, c);\n  }\n\n  scaleRows(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1 } = options;\n    if (!Number.isFinite(min)) throw new TypeError('min must be a number');\n    if (!Number.isFinite(max)) throw new TypeError('max must be a number');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let i = 0; i < this.rows; i++) {\n      const row = this.getRow(i);\n      if (row.length > 0) {\n        rescale(row, { min, max, output: row });\n      }\n      newMatrix.setRow(i, row);\n    }\n    return newMatrix;\n  }\n\n  scaleColumns(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1 } = options;\n    if (!Number.isFinite(min)) throw new TypeError('min must be a number');\n    if (!Number.isFinite(max)) throw new TypeError('max must be a number');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let i = 0; i < this.columns; i++) {\n      const column = this.getColumn(i);\n      if (column.length) {\n        rescale(column, {\n          min: min,\n          max: max,\n          output: column,\n        });\n      }\n      newMatrix.setColumn(i, column);\n    }\n    return newMatrix;\n  }\n\n  flipRows() {\n    const middle = Math.ceil(this.columns / 2);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < middle; j++) {\n        let first = this.get(i, j);\n        let last = this.get(i, this.columns - 1 - j);\n        this.set(i, j, last);\n        this.set(i, this.columns - 1 - j, first);\n      }\n    }\n    return this;\n  }\n\n  flipColumns() {\n    const middle = Math.ceil(this.rows / 2);\n    for (let j = 0; j < this.columns; j++) {\n      for (let i = 0; i < middle; i++) {\n        let first = this.get(i, j);\n        let last = this.get(this.rows - 1 - i, j);\n        this.set(i, j, last);\n        this.set(this.rows - 1 - i, j, first);\n      }\n    }\n    return this;\n  }\n\n  kroneckerProduct(other) {\n    other = Matrix.checkMatrix(other);\n\n    let m = this.rows;\n    let n = this.columns;\n    let p = other.rows;\n    let q = other.columns;\n\n    let result = new Matrix(m * p, n * q);\n    for (let i = 0; i < m; i++) {\n      for (let j = 0; j < n; j++) {\n        for (let k = 0; k < p; k++) {\n          for (let l = 0; l < q; l++) {\n            result.set(p * i + k, q * j + l, this.get(i, j) * other.get(k, l));\n          }\n        }\n      }\n    }\n    return result;\n  }\n\n  kroneckerSum(other) {\n    other = Matrix.checkMatrix(other);\n    if (!this.isSquare() || !other.isSquare()) {\n      throw new Error('Kronecker Sum needs two Square Matrices');\n    }\n    let m = this.rows;\n    let n = other.rows;\n    let AxI = this.kroneckerProduct(Matrix.eye(n, n));\n    let IxB = Matrix.eye(m, m).kroneckerProduct(other);\n    return AxI.add(IxB);\n  }\n\n  transpose() {\n    let result = new Matrix(this.columns, this.rows);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        result.set(j, i, this.get(i, j));\n      }\n    }\n    return result;\n  }\n\n  sortRows(compareFunction = compareNumbers) {\n    for (let i = 0; i < this.rows; i++) {\n      this.setRow(i, this.getRow(i).sort(compareFunction));\n    }\n    return this;\n  }\n\n  sortColumns(compareFunction = compareNumbers) {\n    for (let i = 0; i < this.columns; i++) {\n      this.setColumn(i, this.getColumn(i).sort(compareFunction));\n    }\n    return this;\n  }\n\n  subMatrix(startRow, endRow, startColumn, endColumn) {\n    checkRange(this, startRow, endRow, startColumn, endColumn);\n    let newMatrix = new Matrix(\n      endRow - startRow + 1,\n      endColumn - startColumn + 1,\n    );\n    for (let i = startRow; i <= endRow; i++) {\n      for (let j = startColumn; j <= endColumn; j++) {\n        newMatrix.set(i - startRow, j - startColumn, this.get(i, j));\n      }\n    }\n    return newMatrix;\n  }\n\n  subMatrixRow(indices, startColumn, endColumn) {\n    if (startColumn === undefined) startColumn = 0;\n    if (endColumn === undefined) endColumn = this.columns - 1;\n    if (\n      startColumn > endColumn ||\n      startColumn < 0 ||\n      startColumn >= this.columns ||\n      endColumn < 0 ||\n      endColumn >= this.columns\n    ) {\n      throw new RangeError('Argument out of range');\n    }\n\n    let newMatrix = new Matrix(indices.length, endColumn - startColumn + 1);\n    for (let i = 0; i < indices.length; i++) {\n      for (let j = startColumn; j <= endColumn; j++) {\n        if (indices[i] < 0 || indices[i] >= this.rows) {\n          throw new RangeError(`Row index out of range: ${indices[i]}`);\n        }\n        newMatrix.set(i, j - startColumn, this.get(indices[i], j));\n      }\n    }\n    return newMatrix;\n  }\n\n  subMatrixColumn(indices, startRow, endRow) {\n    if (startRow === undefined) startRow = 0;\n    if (endRow === undefined) endRow = this.rows - 1;\n    if (\n      startRow > endRow ||\n      startRow < 0 ||\n      startRow >= this.rows ||\n      endRow < 0 ||\n      endRow >= this.rows\n    ) {\n      throw new RangeError('Argument out of range');\n    }\n\n    let newMatrix = new Matrix(endRow - startRow + 1, indices.length);\n    for (let i = 0; i < indices.length; i++) {\n      for (let j = startRow; j <= endRow; j++) {\n        if (indices[i] < 0 || indices[i] >= this.columns) {\n          throw new RangeError(`Column index out of range: ${indices[i]}`);\n        }\n        newMatrix.set(j - startRow, i, this.get(j, indices[i]));\n      }\n    }\n    return newMatrix;\n  }\n\n  setSubMatrix(matrix, startRow, startColumn) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (matrix.isEmpty()) {\n      return this;\n    }\n    let endRow = startRow + matrix.rows - 1;\n    let endColumn = startColumn + matrix.columns - 1;\n    checkRange(this, startRow, endRow, startColumn, endColumn);\n    for (let i = 0; i < matrix.rows; i++) {\n      for (let j = 0; j < matrix.columns; j++) {\n        this.set(startRow + i, startColumn + j, matrix.get(i, j));\n      }\n    }\n    return this;\n  }\n\n  selection(rowIndices, columnIndices) {\n    checkRowIndices(this, rowIndices);\n    checkColumnIndices(this, columnIndices);\n    let newMatrix = new Matrix(rowIndices.length, columnIndices.length);\n    for (let i = 0; i < rowIndices.length; i++) {\n      let rowIndex = rowIndices[i];\n      for (let j = 0; j < columnIndices.length; j++) {\n        let columnIndex = columnIndices[j];\n        newMatrix.set(i, j, this.get(rowIndex, columnIndex));\n      }\n    }\n    return newMatrix;\n  }\n\n  trace() {\n    let min = Math.min(this.rows, this.columns);\n    let trace = 0;\n    for (let i = 0; i < min; i++) {\n      trace += this.get(i, i);\n    }\n    return trace;\n  }\n\n  clone() {\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let row = 0; row < this.rows; row++) {\n      for (let column = 0; column < this.columns; column++) {\n        newMatrix.set(row, column, this.get(row, column));\n      }\n    }\n    return newMatrix;\n  }\n\n  sum(by) {\n    switch (by) {\n      case 'row':\n        return sumByRow(this);\n      case 'column':\n        return sumByColumn(this);\n      case undefined:\n        return sumAll(this);\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  product(by) {\n    switch (by) {\n      case 'row':\n        return productByRow(this);\n      case 'column':\n        return productByColumn(this);\n      case undefined:\n        return productAll(this);\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  mean(by) {\n    const sum = this.sum(by);\n    switch (by) {\n      case 'row': {\n        for (let i = 0; i < this.rows; i++) {\n          sum[i] /= this.columns;\n        }\n        return sum;\n      }\n      case 'column': {\n        for (let i = 0; i < this.columns; i++) {\n          sum[i] /= this.rows;\n        }\n        return sum;\n      }\n      case undefined:\n        return sum / this.size;\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  variance(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { unbiased = true, mean = this.mean(by) } = options;\n    if (typeof unbiased !== 'boolean') {\n      throw new TypeError('unbiased must be a boolean');\n    }\n    switch (by) {\n      case 'row': {\n        if (!isAnyArray(mean)) {\n          throw new TypeError('mean must be an array');\n        }\n        return varianceByRow(this, unbiased, mean);\n      }\n      case 'column': {\n        if (!isAnyArray(mean)) {\n          throw new TypeError('mean must be an array');\n        }\n        return varianceByColumn(this, unbiased, mean);\n      }\n      case undefined: {\n        if (typeof mean !== 'number') {\n          throw new TypeError('mean must be a number');\n        }\n        return varianceAll(this, unbiased, mean);\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  standardDeviation(by, options) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    const variance = this.variance(by, options);\n    if (by === undefined) {\n      return Math.sqrt(variance);\n    } else {\n      for (let i = 0; i < variance.length; i++) {\n        variance[i] = Math.sqrt(variance[i]);\n      }\n      return variance;\n    }\n  }\n\n  center(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { center = this.mean(by) } = options;\n    switch (by) {\n      case 'row': {\n        if (!isAnyArray(center)) {\n          throw new TypeError('center must be an array');\n        }\n        centerByRow(this, center);\n        return this;\n      }\n      case 'column': {\n        if (!isAnyArray(center)) {\n          throw new TypeError('center must be an array');\n        }\n        centerByColumn(this, center);\n        return this;\n      }\n      case undefined: {\n        if (typeof center !== 'number') {\n          throw new TypeError('center must be a number');\n        }\n        centerAll(this, center);\n        return this;\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  scale(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    let scale = options.scale;\n    switch (by) {\n      case 'row': {\n        if (scale === undefined) {\n          scale = getScaleByRow(this);\n        } else if (!isAnyArray(scale)) {\n          throw new TypeError('scale must be an array');\n        }\n        scaleByRow(this, scale);\n        return this;\n      }\n      case 'column': {\n        if (scale === undefined) {\n          scale = getScaleByColumn(this);\n        } else if (!isAnyArray(scale)) {\n          throw new TypeError('scale must be an array');\n        }\n        scaleByColumn(this, scale);\n        return this;\n      }\n      case undefined: {\n        if (scale === undefined) {\n          scale = getScaleAll(this);\n        } else if (typeof scale !== 'number') {\n          throw new TypeError('scale must be a number');\n        }\n        scaleAll(this, scale);\n        return this;\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  toString(options) {\n    return inspectMatrixWithOptions(this, options);\n  }\n}\n\nAbstractMatrix.prototype.klass = 'Matrix';\nif (typeof Symbol !== 'undefined') {\n  AbstractMatrix.prototype[Symbol.for('nodejs.util.inspect.custom')] =\n    inspectMatrix;\n}\n\nfunction compareNumbers(a, b) {\n  return a - b;\n}\n\nfunction isArrayOfNumbers(array) {\n  return array.every((element) => {\n    return typeof element === 'number';\n  });\n}\n\n// Synonyms\nAbstractMatrix.random = AbstractMatrix.rand;\nAbstractMatrix.randomInt = AbstractMatrix.randInt;\nAbstractMatrix.diagonal = AbstractMatrix.diag;\nAbstractMatrix.prototype.diagonal = AbstractMatrix.prototype.diag;\nAbstractMatrix.identity = AbstractMatrix.eye;\nAbstractMatrix.prototype.negate = AbstractMatrix.prototype.neg;\nAbstractMatrix.prototype.tensorProduct =\n  AbstractMatrix.prototype.kroneckerProduct;\n\nexport default class Matrix extends AbstractMatrix {\n  constructor(nRows, nColumns) {\n    super();\n    if (Matrix.isMatrix(nRows)) {\n      // eslint-disable-next-line no-constructor-return\n      return nRows.clone();\n    } else if (Number.isInteger(nRows) && nRows >= 0) {\n      // Create an empty matrix\n      this.data = [];\n      if (Number.isInteger(nColumns) && nColumns >= 0) {\n        for (let i = 0; i < nRows; i++) {\n          this.data.push(new Float64Array(nColumns));\n        }\n      } else {\n        throw new TypeError('nColumns must be a positive integer');\n      }\n    } else if (isAnyArray(nRows)) {\n      // Copy the values from the 2D array\n      const arrayData = nRows;\n      nRows = arrayData.length;\n      nColumns = nRows ? arrayData[0].length : 0;\n      if (typeof nColumns !== 'number') {\n        throw new TypeError(\n          'Data must be a 2D array with at least one element',\n        );\n      }\n      this.data = [];\n      for (let i = 0; i < nRows; i++) {\n        if (arrayData[i].length !== nColumns) {\n          throw new RangeError('Inconsistent array dimensions');\n        }\n        if (!isArrayOfNumbers(arrayData[i])) {\n          throw new TypeError('Input data contains non-numeric values');\n        }\n        this.data.push(Float64Array.from(arrayData[i]));\n      }\n    } else {\n      throw new TypeError(\n        'First argument must be a positive number or an array',\n      );\n    }\n    this.rows = nRows;\n    this.columns = nColumns;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.data[rowIndex][columnIndex] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.data[rowIndex][columnIndex];\n  }\n\n  removeRow(index) {\n    checkRowIndex(this, index);\n    this.data.splice(index, 1);\n    this.rows -= 1;\n    return this;\n  }\n\n  addRow(index, array) {\n    if (array === undefined) {\n      array = index;\n      index = this.rows;\n    }\n    checkRowIndex(this, index, true);\n    array = Float64Array.from(checkRowVector(this, array));\n    this.data.splice(index, 0, array);\n    this.rows += 1;\n    return this;\n  }\n\n  removeColumn(index) {\n    checkColumnIndex(this, index);\n    for (let i = 0; i < this.rows; i++) {\n      const newRow = new Float64Array(this.columns - 1);\n      for (let j = 0; j < index; j++) {\n        newRow[j] = this.data[i][j];\n      }\n      for (let j = index + 1; j < this.columns; j++) {\n        newRow[j - 1] = this.data[i][j];\n      }\n      this.data[i] = newRow;\n    }\n    this.columns -= 1;\n    return this;\n  }\n\n  addColumn(index, array) {\n    if (typeof array === 'undefined') {\n      array = index;\n      index = this.columns;\n    }\n    checkColumnIndex(this, index, true);\n    array = checkColumnVector(this, array);\n    for (let i = 0; i < this.rows; i++) {\n      const newRow = new Float64Array(this.columns + 1);\n      let j = 0;\n      for (; j < index; j++) {\n        newRow[j] = this.data[i][j];\n      }\n      newRow[j++] = array[i];\n      for (; j < this.columns + 1; j++) {\n        newRow[j] = this.data[i][j - 1];\n      }\n      this.data[i] = newRow;\n    }\n    this.columns += 1;\n    return this;\n  }\n}\n\ninstallMathOperations(AbstractMatrix, Matrix);\n","export function installMathOperations(AbstractMatrix, Matrix) {\n  AbstractMatrix.prototype.add = function add(value) {\n    if (typeof value === 'number') return this.addS(value);\n    return this.addM(value);\n  };\n\n  AbstractMatrix.prototype.addS = function addS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.addM = function addM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.add = function add(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.add(value);\n  };\n\n  AbstractMatrix.prototype.sub = function sub(value) {\n    if (typeof value === 'number') return this.subS(value);\n    return this.subM(value);\n  };\n\n  AbstractMatrix.prototype.subS = function subS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.subM = function subM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sub = function sub(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sub(value);\n  };\n  AbstractMatrix.prototype.subtract = AbstractMatrix.prototype.sub;\n  AbstractMatrix.prototype.subtractS = AbstractMatrix.prototype.subS;\n  AbstractMatrix.prototype.subtractM = AbstractMatrix.prototype.subM;\n  AbstractMatrix.subtract = AbstractMatrix.sub;\n\n  AbstractMatrix.prototype.mul = function mul(value) {\n    if (typeof value === 'number') return this.mulS(value);\n    return this.mulM(value);\n  };\n\n  AbstractMatrix.prototype.mulS = function mulS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.mulM = function mulM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.mul = function mul(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.mul(value);\n  };\n  AbstractMatrix.prototype.multiply = AbstractMatrix.prototype.mul;\n  AbstractMatrix.prototype.multiplyS = AbstractMatrix.prototype.mulS;\n  AbstractMatrix.prototype.multiplyM = AbstractMatrix.prototype.mulM;\n  AbstractMatrix.multiply = AbstractMatrix.mul;\n\n  AbstractMatrix.prototype.div = function div(value) {\n    if (typeof value === 'number') return this.divS(value);\n    return this.divM(value);\n  };\n\n  AbstractMatrix.prototype.divS = function divS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.divM = function divM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.div = function div(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.div(value);\n  };\n  AbstractMatrix.prototype.divide = AbstractMatrix.prototype.div;\n  AbstractMatrix.prototype.divideS = AbstractMatrix.prototype.divS;\n  AbstractMatrix.prototype.divideM = AbstractMatrix.prototype.divM;\n  AbstractMatrix.divide = AbstractMatrix.div;\n\n  AbstractMatrix.prototype.mod = function mod(value) {\n    if (typeof value === 'number') return this.modS(value);\n    return this.modM(value);\n  };\n\n  AbstractMatrix.prototype.modS = function modS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) % value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.modM = function modM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) % matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.mod = function mod(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.mod(value);\n  };\n  AbstractMatrix.prototype.modulus = AbstractMatrix.prototype.mod;\n  AbstractMatrix.prototype.modulusS = AbstractMatrix.prototype.modS;\n  AbstractMatrix.prototype.modulusM = AbstractMatrix.prototype.modM;\n  AbstractMatrix.modulus = AbstractMatrix.mod;\n\n  AbstractMatrix.prototype.and = function and(value) {\n    if (typeof value === 'number') return this.andS(value);\n    return this.andM(value);\n  };\n\n  AbstractMatrix.prototype.andS = function andS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) & value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.andM = function andM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) & matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.and = function and(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.and(value);\n  };\n\n  AbstractMatrix.prototype.or = function or(value) {\n    if (typeof value === 'number') return this.orS(value);\n    return this.orM(value);\n  };\n\n  AbstractMatrix.prototype.orS = function orS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) | value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.orM = function orM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) | matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.or = function or(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.or(value);\n  };\n\n  AbstractMatrix.prototype.xor = function xor(value) {\n    if (typeof value === 'number') return this.xorS(value);\n    return this.xorM(value);\n  };\n\n  AbstractMatrix.prototype.xorS = function xorS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) ^ value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.xorM = function xorM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) ^ matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.xor = function xor(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.xor(value);\n  };\n\n  AbstractMatrix.prototype.leftShift = function leftShift(value) {\n    if (typeof value === 'number') return this.leftShiftS(value);\n    return this.leftShiftM(value);\n  };\n\n  AbstractMatrix.prototype.leftShiftS = function leftShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) << value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.leftShiftM = function leftShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) << matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.leftShift = function leftShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.leftShift(value);\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShift = function signPropagatingRightShift(value) {\n    if (typeof value === 'number') return this.signPropagatingRightShiftS(value);\n    return this.signPropagatingRightShiftM(value);\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShiftS = function signPropagatingRightShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >> value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShiftM = function signPropagatingRightShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >> matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.signPropagatingRightShift = function signPropagatingRightShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.signPropagatingRightShift(value);\n  };\n\n  AbstractMatrix.prototype.rightShift = function rightShift(value) {\n    if (typeof value === 'number') return this.rightShiftS(value);\n    return this.rightShiftM(value);\n  };\n\n  AbstractMatrix.prototype.rightShiftS = function rightShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >>> value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.rightShiftM = function rightShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >>> matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.rightShift = function rightShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.rightShift(value);\n  };\n  AbstractMatrix.prototype.zeroFillRightShift = AbstractMatrix.prototype.rightShift;\n  AbstractMatrix.prototype.zeroFillRightShiftS = AbstractMatrix.prototype.rightShiftS;\n  AbstractMatrix.prototype.zeroFillRightShiftM = AbstractMatrix.prototype.rightShiftM;\n  AbstractMatrix.zeroFillRightShift = AbstractMatrix.rightShift;\n\n  AbstractMatrix.prototype.not = function not() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, ~(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.not = function not(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.not();\n  };\n\n  AbstractMatrix.prototype.abs = function abs() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.abs(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.abs = function abs(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.abs();\n  };\n\n  AbstractMatrix.prototype.acos = function acos() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.acos(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.acos = function acos(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.acos();\n  };\n\n  AbstractMatrix.prototype.acosh = function acosh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.acosh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.acosh = function acosh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.acosh();\n  };\n\n  AbstractMatrix.prototype.asin = function asin() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.asin(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.asin = function asin(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.asin();\n  };\n\n  AbstractMatrix.prototype.asinh = function asinh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.asinh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.asinh = function asinh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.asinh();\n  };\n\n  AbstractMatrix.prototype.atan = function atan() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.atan(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.atan = function atan(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.atan();\n  };\n\n  AbstractMatrix.prototype.atanh = function atanh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.atanh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.atanh = function atanh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.atanh();\n  };\n\n  AbstractMatrix.prototype.cbrt = function cbrt() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cbrt(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cbrt = function cbrt(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cbrt();\n  };\n\n  AbstractMatrix.prototype.ceil = function ceil() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.ceil(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.ceil = function ceil(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.ceil();\n  };\n\n  AbstractMatrix.prototype.clz32 = function clz32() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.clz32(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.clz32 = function clz32(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.clz32();\n  };\n\n  AbstractMatrix.prototype.cos = function cos() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cos(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cos = function cos(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cos();\n  };\n\n  AbstractMatrix.prototype.cosh = function cosh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cosh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cosh = function cosh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cosh();\n  };\n\n  AbstractMatrix.prototype.exp = function exp() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.exp(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.exp = function exp(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.exp();\n  };\n\n  AbstractMatrix.prototype.expm1 = function expm1() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.expm1(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.expm1 = function expm1(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.expm1();\n  };\n\n  AbstractMatrix.prototype.floor = function floor() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.floor(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.floor = function floor(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.floor();\n  };\n\n  AbstractMatrix.prototype.fround = function fround() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.fround(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.fround = function fround(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.fround();\n  };\n\n  AbstractMatrix.prototype.log = function log() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log = function log(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log();\n  };\n\n  AbstractMatrix.prototype.log1p = function log1p() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log1p(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log1p = function log1p(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log1p();\n  };\n\n  AbstractMatrix.prototype.log10 = function log10() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log10(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log10 = function log10(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log10();\n  };\n\n  AbstractMatrix.prototype.log2 = function log2() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log2(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log2 = function log2(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log2();\n  };\n\n  AbstractMatrix.prototype.round = function round() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.round(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.round = function round(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.round();\n  };\n\n  AbstractMatrix.prototype.sign = function sign() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sign(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sign = function sign(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sign();\n  };\n\n  AbstractMatrix.prototype.sin = function sin() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sin(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sin = function sin(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sin();\n  };\n\n  AbstractMatrix.prototype.sinh = function sinh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sinh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sinh = function sinh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sinh();\n  };\n\n  AbstractMatrix.prototype.sqrt = function sqrt() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sqrt(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sqrt = function sqrt(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sqrt();\n  };\n\n  AbstractMatrix.prototype.tan = function tan() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.tan(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.tan = function tan(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.tan();\n  };\n\n  AbstractMatrix.prototype.tanh = function tanh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.tanh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.tanh = function tanh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.tanh();\n  };\n\n  AbstractMatrix.prototype.trunc = function trunc() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.trunc(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.trunc = function trunc(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.trunc();\n  };\n\n  AbstractMatrix.pow = function pow(matrix, arg0) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.pow(arg0);\n  };\n\n  AbstractMatrix.prototype.pow = function pow(value) {\n    if (typeof value === 'number') return this.powS(value);\n    return this.powM(value);\n  };\n\n  AbstractMatrix.prototype.powS = function powS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.pow(this.get(i, j), value));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.powM = function powM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.pow(this.get(i, j), matrix.get(i, j)));\n      }\n    }\n    return this;\n  };\n}\n","import { AbstractMatrix } from '../matrix';\n\nexport default class BaseView extends AbstractMatrix {\n  constructor(matrix, rows, columns) {\n    super();\n    this.matrix = matrix;\n    this.rows = rows;\n    this.columns = columns;\n  }\n}\n","import { checkColumnIndex } from '../util';\n\nimport BaseView from './base';\n\nexport default class MatrixColumnView extends BaseView {\n  constructor(matrix, column) {\n    checkColumnIndex(matrix, column);\n    super(matrix, matrix.rows, 1);\n    this.column = column;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(rowIndex, this.column, value);\n    return this;\n  }\n\n  get(rowIndex) {\n    return this.matrix.get(rowIndex, this.column);\n  }\n}\n","import { checkColumnIndices } from '../util';\n\nimport BaseView from './base';\n\nexport default class MatrixColumnSelectionView extends BaseView {\n  constructor(matrix, columnIndices) {\n    checkColumnIndices(matrix, columnIndices);\n    super(matrix, matrix.rows, columnIndices.length);\n    this.columnIndices = columnIndices;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(rowIndex, this.columnIndices[columnIndex], value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(rowIndex, this.columnIndices[columnIndex]);\n  }\n}\n","import BaseView from './base';\n\nexport default class MatrixFlipColumnView extends BaseView {\n  constructor(matrix) {\n    super(matrix, matrix.rows, matrix.columns);\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(rowIndex, this.columns - columnIndex - 1, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(rowIndex, this.columns - columnIndex - 1);\n  }\n}\n","import BaseView from './base';\n\nexport default class MatrixFlipRowView extends BaseView {\n  constructor(matrix) {\n    super(matrix, matrix.rows, matrix.columns);\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(this.rows - rowIndex - 1, columnIndex, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(this.rows - rowIndex - 1, columnIndex);\n  }\n}\n","import { checkRowIndex } from '../util';\n\nimport BaseView from './base';\n\nexport default class MatrixRowView extends BaseView {\n  constructor(matrix, row) {\n    checkRowIndex(matrix, row);\n    super(matrix, 1, matrix.columns);\n    this.row = row;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(this.row, columnIndex, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(this.row, columnIndex);\n  }\n}\n","import { checkRowIndices } from '../util';\n\nimport BaseView from './base';\n\nexport default class MatrixRowSelectionView extends BaseView {\n  constructor(matrix, rowIndices) {\n    checkRowIndices(matrix, rowIndices);\n    super(matrix, rowIndices.length, matrix.columns);\n    this.rowIndices = rowIndices;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(this.rowIndices[rowIndex], columnIndex, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(this.rowIndices[rowIndex], columnIndex);\n  }\n}\n","import { checkRowIndices, checkColumnIndices } from '../util';\n\nimport BaseView from './base';\n\nexport default class MatrixSelectionView extends BaseView {\n  constructor(matrix, rowIndices, columnIndices) {\n    checkRowIndices(matrix, rowIndices);\n    checkColumnIndices(matrix, columnIndices);\n    super(matrix, rowIndices.length, columnIndices.length);\n    this.rowIndices = rowIndices;\n    this.columnIndices = columnIndices;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(\n      this.rowIndices[rowIndex],\n      this.columnIndices[columnIndex],\n      value,\n    );\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(\n      this.rowIndices[rowIndex],\n      this.columnIndices[columnIndex],\n    );\n  }\n}\n","import { checkRange } from '../util';\n\nimport BaseView from './base';\n\nexport default class MatrixSubView extends BaseView {\n  constructor(matrix, startRow, endRow, startColumn, endColumn) {\n    checkRange(matrix, startRow, endRow, startColumn, endColumn);\n    super(matrix, endRow - startRow + 1, endColumn - startColumn + 1);\n    this.startRow = startRow;\n    this.startColumn = startColumn;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(\n      this.startRow + rowIndex,\n      this.startColumn + columnIndex,\n      value,\n    );\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(\n      this.startRow + rowIndex,\n      this.startColumn + columnIndex,\n    );\n  }\n}\n","import BaseView from './base';\n\nexport default class MatrixTransposeView extends BaseView {\n  constructor(matrix) {\n    super(matrix, matrix.columns, matrix.rows);\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(columnIndex, rowIndex, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(columnIndex, rowIndex);\n  }\n}\n","import { AbstractMatrix } from '../matrix';\n\nexport default class WrapperMatrix1D extends AbstractMatrix {\n  constructor(data, options = {}) {\n    const { rows = 1 } = options;\n\n    if (data.length % rows !== 0) {\n      throw new Error('the data length is not divisible by the number of rows');\n    }\n    super();\n    this.rows = rows;\n    this.columns = data.length / rows;\n    this.data = data;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    let index = this._calculateIndex(rowIndex, columnIndex);\n    this.data[index] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    let index = this._calculateIndex(rowIndex, columnIndex);\n    return this.data[index];\n  }\n\n  _calculateIndex(row, column) {\n    return row * this.columns + column;\n  }\n}\n","import { AbstractMatrix } from '../matrix';\n\nexport default class WrapperMatrix2D extends AbstractMatrix {\n  constructor(data) {\n    super();\n    this.data = data;\n    this.rows = data.length;\n    this.columns = data[0].length;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.data[rowIndex][columnIndex] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.data[rowIndex][columnIndex];\n  }\n}\n","import { isAnyArray } from 'is-any-array';\n\nimport WrapperMatrix1D from './WrapperMatrix1D';\nimport WrapperMatrix2D from './WrapperMatrix2D';\n\nexport function wrap(array, options) {\n  if (isAnyArray(array)) {\n    if (array[0] && isAnyArray(array[0])) {\n      return new WrapperMatrix2D(array);\n    } else {\n      return new WrapperMatrix1D(array, options);\n    }\n  } else {\n    throw new Error('the argument is not an array');\n  }\n}\n","import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nexport default class LuDecomposition {\n  constructor(matrix) {\n    matrix = WrapperMatrix2D.checkMatrix(matrix);\n\n    let lu = matrix.clone();\n    let rows = lu.rows;\n    let columns = lu.columns;\n    let pivotVector = new Float64Array(rows);\n    let pivotSign = 1;\n    let i, j, k, p, s, t, v;\n    let LUcolj, kmax;\n\n    for (i = 0; i < rows; i++) {\n      pivotVector[i] = i;\n    }\n\n    LUcolj = new Float64Array(rows);\n\n    for (j = 0; j < columns; j++) {\n      for (i = 0; i < rows; i++) {\n        LUcolj[i] = lu.get(i, j);\n      }\n\n      for (i = 0; i < rows; i++) {\n        kmax = Math.min(i, j);\n        s = 0;\n        for (k = 0; k < kmax; k++) {\n          s += lu.get(i, k) * LUcolj[k];\n        }\n        LUcolj[i] -= s;\n        lu.set(i, j, LUcolj[i]);\n      }\n\n      p = j;\n      for (i = j + 1; i < rows; i++) {\n        if (Math.abs(LUcolj[i]) > Math.abs(LUcolj[p])) {\n          p = i;\n        }\n      }\n\n      if (p !== j) {\n        for (k = 0; k < columns; k++) {\n          t = lu.get(p, k);\n          lu.set(p, k, lu.get(j, k));\n          lu.set(j, k, t);\n        }\n\n        v = pivotVector[p];\n        pivotVector[p] = pivotVector[j];\n        pivotVector[j] = v;\n\n        pivotSign = -pivotSign;\n      }\n\n      if (j < rows && lu.get(j, j) !== 0) {\n        for (i = j + 1; i < rows; i++) {\n          lu.set(i, j, lu.get(i, j) / lu.get(j, j));\n        }\n      }\n    }\n\n    this.LU = lu;\n    this.pivotVector = pivotVector;\n    this.pivotSign = pivotSign;\n  }\n\n  isSingular() {\n    let data = this.LU;\n    let col = data.columns;\n    for (let j = 0; j < col; j++) {\n      if (data.get(j, j) === 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  solve(value) {\n    value = Matrix.checkMatrix(value);\n\n    let lu = this.LU;\n    let rows = lu.rows;\n\n    if (rows !== value.rows) {\n      throw new Error('Invalid matrix dimensions');\n    }\n    if (this.isSingular()) {\n      throw new Error('LU matrix is singular');\n    }\n\n    let count = value.columns;\n    let X = value.subMatrixRow(this.pivotVector, 0, count - 1);\n    let columns = lu.columns;\n    let i, j, k;\n\n    for (k = 0; k < columns; k++) {\n      for (i = k + 1; i < columns; i++) {\n        for (j = 0; j < count; j++) {\n          X.set(i, j, X.get(i, j) - X.get(k, j) * lu.get(i, k));\n        }\n      }\n    }\n    for (k = columns - 1; k >= 0; k--) {\n      for (j = 0; j < count; j++) {\n        X.set(k, j, X.get(k, j) / lu.get(k, k));\n      }\n      for (i = 0; i < k; i++) {\n        for (j = 0; j < count; j++) {\n          X.set(i, j, X.get(i, j) - X.get(k, j) * lu.get(i, k));\n        }\n      }\n    }\n    return X;\n  }\n\n  get determinant() {\n    let data = this.LU;\n    if (!data.isSquare()) {\n      throw new Error('Matrix must be square');\n    }\n    let determinant = this.pivotSign;\n    let col = data.columns;\n    for (let j = 0; j < col; j++) {\n      determinant *= data.get(j, j);\n    }\n    return determinant;\n  }\n\n  get lowerTriangularMatrix() {\n    let data = this.LU;\n    let rows = data.rows;\n    let columns = data.columns;\n    let X = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        if (i > j) {\n          X.set(i, j, data.get(i, j));\n        } else if (i === j) {\n          X.set(i, j, 1);\n        } else {\n          X.set(i, j, 0);\n        }\n      }\n    }\n    return X;\n  }\n\n  get upperTriangularMatrix() {\n    let data = this.LU;\n    let rows = data.rows;\n    let columns = data.columns;\n    let X = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        if (i <= j) {\n          X.set(i, j, data.get(i, j));\n        } else {\n          X.set(i, j, 0);\n        }\n      }\n    }\n    return X;\n  }\n\n  get pivotPermutationVector() {\n    return Array.from(this.pivotVector);\n  }\n}\n","export function hypotenuse(a, b) {\n  let r = 0;\n  if (Math.abs(a) > Math.abs(b)) {\n    r = b / a;\n    return Math.abs(a) * Math.sqrt(1 + r * r);\n  }\n  if (b !== 0) {\n    r = a / b;\n    return Math.abs(b) * Math.sqrt(1 + r * r);\n  }\n  return 0;\n}\n","import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nimport { hypotenuse } from './util';\n\nexport default class QrDecomposition {\n  constructor(value) {\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    let qr = value.clone();\n    let m = value.rows;\n    let n = value.columns;\n    let rdiag = new Float64Array(n);\n    let i, j, k, s;\n\n    for (k = 0; k < n; k++) {\n      let nrm = 0;\n      for (i = k; i < m; i++) {\n        nrm = hypotenuse(nrm, qr.get(i, k));\n      }\n      if (nrm !== 0) {\n        if (qr.get(k, k) < 0) {\n          nrm = -nrm;\n        }\n        for (i = k; i < m; i++) {\n          qr.set(i, k, qr.get(i, k) / nrm);\n        }\n        qr.set(k, k, qr.get(k, k) + 1);\n        for (j = k + 1; j < n; j++) {\n          s = 0;\n          for (i = k; i < m; i++) {\n            s += qr.get(i, k) * qr.get(i, j);\n          }\n          s = -s / qr.get(k, k);\n          for (i = k; i < m; i++) {\n            qr.set(i, j, qr.get(i, j) + s * qr.get(i, k));\n          }\n        }\n      }\n      rdiag[k] = -nrm;\n    }\n\n    this.QR = qr;\n    this.Rdiag = rdiag;\n  }\n\n  solve(value) {\n    value = Matrix.checkMatrix(value);\n\n    let qr = this.QR;\n    let m = qr.rows;\n\n    if (value.rows !== m) {\n      throw new Error('Matrix row dimensions must agree');\n    }\n    if (!this.isFullRank()) {\n      throw new Error('Matrix is rank deficient');\n    }\n\n    let count = value.columns;\n    let X = value.clone();\n    let n = qr.columns;\n    let i, j, k, s;\n\n    for (k = 0; k < n; k++) {\n      for (j = 0; j < count; j++) {\n        s = 0;\n        for (i = k; i < m; i++) {\n          s += qr.get(i, k) * X.get(i, j);\n        }\n        s = -s / qr.get(k, k);\n        for (i = k; i < m; i++) {\n          X.set(i, j, X.get(i, j) + s * qr.get(i, k));\n        }\n      }\n    }\n    for (k = n - 1; k >= 0; k--) {\n      for (j = 0; j < count; j++) {\n        X.set(k, j, X.get(k, j) / this.Rdiag[k]);\n      }\n      for (i = 0; i < k; i++) {\n        for (j = 0; j < count; j++) {\n          X.set(i, j, X.get(i, j) - X.get(k, j) * qr.get(i, k));\n        }\n      }\n    }\n\n    return X.subMatrix(0, n - 1, 0, count - 1);\n  }\n\n  isFullRank() {\n    let columns = this.QR.columns;\n    for (let i = 0; i < columns; i++) {\n      if (this.Rdiag[i] === 0) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  get upperTriangularMatrix() {\n    let qr = this.QR;\n    let n = qr.columns;\n    let X = new Matrix(n, n);\n    let i, j;\n    for (i = 0; i < n; i++) {\n      for (j = 0; j < n; j++) {\n        if (i < j) {\n          X.set(i, j, qr.get(i, j));\n        } else if (i === j) {\n          X.set(i, j, this.Rdiag[i]);\n        } else {\n          X.set(i, j, 0);\n        }\n      }\n    }\n    return X;\n  }\n\n  get orthogonalMatrix() {\n    let qr = this.QR;\n    let rows = qr.rows;\n    let columns = qr.columns;\n    let X = new Matrix(rows, columns);\n    let i, j, k, s;\n\n    for (k = columns - 1; k >= 0; k--) {\n      for (i = 0; i < rows; i++) {\n        X.set(i, k, 0);\n      }\n      X.set(k, k, 1);\n      for (j = k; j < columns; j++) {\n        if (qr.get(k, k) !== 0) {\n          s = 0;\n          for (i = k; i < rows; i++) {\n            s += qr.get(i, k) * X.get(i, j);\n          }\n\n          s = -s / qr.get(k, k);\n\n          for (i = k; i < rows; i++) {\n            X.set(i, j, X.get(i, j) + s * qr.get(i, k));\n          }\n        }\n      }\n    }\n    return X;\n  }\n}\n","import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nimport { hypotenuse } from './util';\n\nexport default class SingularValueDecomposition {\n  constructor(value, options = {}) {\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    if (value.isEmpty()) {\n      throw new Error('Matrix must be non-empty');\n    }\n\n    let m = value.rows;\n    let n = value.columns;\n\n    const {\n      computeLeftSingularVectors = true,\n      computeRightSingularVectors = true,\n      autoTranspose = false,\n    } = options;\n\n    let wantu = Boolean(computeLeftSingularVectors);\n    let wantv = Boolean(computeRightSingularVectors);\n\n    let swapped = false;\n    let a;\n    if (m < n) {\n      if (!autoTranspose) {\n        a = value.clone();\n        // eslint-disable-next-line no-console\n        console.warn(\n          'Computing SVD on a matrix with more columns than rows. Consider enabling autoTranspose',\n        );\n      } else {\n        a = value.transpose();\n        m = a.rows;\n        n = a.columns;\n        swapped = true;\n        let aux = wantu;\n        wantu = wantv;\n        wantv = aux;\n      }\n    } else {\n      a = value.clone();\n    }\n\n    let nu = Math.min(m, n);\n    let ni = Math.min(m + 1, n);\n    let s = new Float64Array(ni);\n    let U = new Matrix(m, nu);\n    let V = new Matrix(n, n);\n\n    let e = new Float64Array(n);\n    let work = new Float64Array(m);\n\n    let si = new Float64Array(ni);\n    for (let i = 0; i < ni; i++) si[i] = i;\n\n    let nct = Math.min(m - 1, n);\n    let nrt = Math.max(0, Math.min(n - 2, m));\n    let mrc = Math.max(nct, nrt);\n\n    for (let k = 0; k < mrc; k++) {\n      if (k < nct) {\n        s[k] = 0;\n        for (let i = k; i < m; i++) {\n          s[k] = hypotenuse(s[k], a.get(i, k));\n        }\n        if (s[k] !== 0) {\n          if (a.get(k, k) < 0) {\n            s[k] = -s[k];\n          }\n          for (let i = k; i < m; i++) {\n            a.set(i, k, a.get(i, k) / s[k]);\n          }\n          a.set(k, k, a.get(k, k) + 1);\n        }\n        s[k] = -s[k];\n      }\n\n      for (let j = k + 1; j < n; j++) {\n        if (k < nct && s[k] !== 0) {\n          let t = 0;\n          for (let i = k; i < m; i++) {\n            t += a.get(i, k) * a.get(i, j);\n          }\n          t = -t / a.get(k, k);\n          for (let i = k; i < m; i++) {\n            a.set(i, j, a.get(i, j) + t * a.get(i, k));\n          }\n        }\n        e[j] = a.get(k, j);\n      }\n\n      if (wantu && k < nct) {\n        for (let i = k; i < m; i++) {\n          U.set(i, k, a.get(i, k));\n        }\n      }\n\n      if (k < nrt) {\n        e[k] = 0;\n        for (let i = k + 1; i < n; i++) {\n          e[k] = hypotenuse(e[k], e[i]);\n        }\n        if (e[k] !== 0) {\n          if (e[k + 1] < 0) {\n            e[k] = 0 - e[k];\n          }\n          for (let i = k + 1; i < n; i++) {\n            e[i] /= e[k];\n          }\n          e[k + 1] += 1;\n        }\n        e[k] = -e[k];\n        if (k + 1 < m && e[k] !== 0) {\n          for (let i = k + 1; i < m; i++) {\n            work[i] = 0;\n          }\n          for (let i = k + 1; i < m; i++) {\n            for (let j = k + 1; j < n; j++) {\n              work[i] += e[j] * a.get(i, j);\n            }\n          }\n          for (let j = k + 1; j < n; j++) {\n            let t = -e[j] / e[k + 1];\n            for (let i = k + 1; i < m; i++) {\n              a.set(i, j, a.get(i, j) + t * work[i]);\n            }\n          }\n        }\n        if (wantv) {\n          for (let i = k + 1; i < n; i++) {\n            V.set(i, k, e[i]);\n          }\n        }\n      }\n    }\n\n    let p = Math.min(n, m + 1);\n    if (nct < n) {\n      s[nct] = a.get(nct, nct);\n    }\n    if (m < p) {\n      s[p - 1] = 0;\n    }\n    if (nrt + 1 < p) {\n      e[nrt] = a.get(nrt, p - 1);\n    }\n    e[p - 1] = 0;\n\n    if (wantu) {\n      for (let j = nct; j < nu; j++) {\n        for (let i = 0; i < m; i++) {\n          U.set(i, j, 0);\n        }\n        U.set(j, j, 1);\n      }\n      for (let k = nct - 1; k >= 0; k--) {\n        if (s[k] !== 0) {\n          for (let j = k + 1; j < nu; j++) {\n            let t = 0;\n            for (let i = k; i < m; i++) {\n              t += U.get(i, k) * U.get(i, j);\n            }\n            t = -t / U.get(k, k);\n            for (let i = k; i < m; i++) {\n              U.set(i, j, U.get(i, j) + t * U.get(i, k));\n            }\n          }\n          for (let i = k; i < m; i++) {\n            U.set(i, k, -U.get(i, k));\n          }\n          U.set(k, k, 1 + U.get(k, k));\n          for (let i = 0; i < k - 1; i++) {\n            U.set(i, k, 0);\n          }\n        } else {\n          for (let i = 0; i < m; i++) {\n            U.set(i, k, 0);\n          }\n          U.set(k, k, 1);\n        }\n      }\n    }\n\n    if (wantv) {\n      for (let k = n - 1; k >= 0; k--) {\n        if (k < nrt && e[k] !== 0) {\n          for (let j = k + 1; j < n; j++) {\n            let t = 0;\n            for (let i = k + 1; i < n; i++) {\n              t += V.get(i, k) * V.get(i, j);\n            }\n            t = -t / V.get(k + 1, k);\n            for (let i = k + 1; i < n; i++) {\n              V.set(i, j, V.get(i, j) + t * V.get(i, k));\n            }\n          }\n        }\n        for (let i = 0; i < n; i++) {\n          V.set(i, k, 0);\n        }\n        V.set(k, k, 1);\n      }\n    }\n\n    let pp = p - 1;\n    let iter = 0;\n    let eps = Number.EPSILON;\n    while (p > 0) {\n      let k, kase;\n      for (k = p - 2; k >= -1; k--) {\n        if (k === -1) {\n          break;\n        }\n        const alpha =\n          Number.MIN_VALUE + eps * Math.abs(s[k] + Math.abs(s[k + 1]));\n        if (Math.abs(e[k]) <= alpha || Number.isNaN(e[k])) {\n          e[k] = 0;\n          break;\n        }\n      }\n      if (k === p - 2) {\n        kase = 4;\n      } else {\n        let ks;\n        for (ks = p - 1; ks >= k; ks--) {\n          if (ks === k) {\n            break;\n          }\n          let t =\n            (ks !== p ? Math.abs(e[ks]) : 0) +\n            (ks !== k + 1 ? Math.abs(e[ks - 1]) : 0);\n          if (Math.abs(s[ks]) <= eps * t) {\n            s[ks] = 0;\n            break;\n          }\n        }\n        if (ks === k) {\n          kase = 3;\n        } else if (ks === p - 1) {\n          kase = 1;\n        } else {\n          kase = 2;\n          k = ks;\n        }\n      }\n\n      k++;\n\n      switch (kase) {\n        case 1: {\n          let f = e[p - 2];\n          e[p - 2] = 0;\n          for (let j = p - 2; j >= k; j--) {\n            let t = hypotenuse(s[j], f);\n            let cs = s[j] / t;\n            let sn = f / t;\n            s[j] = t;\n            if (j !== k) {\n              f = -sn * e[j - 1];\n              e[j - 1] = cs * e[j - 1];\n            }\n            if (wantv) {\n              for (let i = 0; i < n; i++) {\n                t = cs * V.get(i, j) + sn * V.get(i, p - 1);\n                V.set(i, p - 1, -sn * V.get(i, j) + cs * V.get(i, p - 1));\n                V.set(i, j, t);\n              }\n            }\n          }\n          break;\n        }\n        case 2: {\n          let f = e[k - 1];\n          e[k - 1] = 0;\n          for (let j = k; j < p; j++) {\n            let t = hypotenuse(s[j], f);\n            let cs = s[j] / t;\n            let sn = f / t;\n            s[j] = t;\n            f = -sn * e[j];\n            e[j] = cs * e[j];\n            if (wantu) {\n              for (let i = 0; i < m; i++) {\n                t = cs * U.get(i, j) + sn * U.get(i, k - 1);\n                U.set(i, k - 1, -sn * U.get(i, j) + cs * U.get(i, k - 1));\n                U.set(i, j, t);\n              }\n            }\n          }\n          break;\n        }\n        case 3: {\n          const scale = Math.max(\n            Math.abs(s[p - 1]),\n            Math.abs(s[p - 2]),\n            Math.abs(e[p - 2]),\n            Math.abs(s[k]),\n            Math.abs(e[k]),\n          );\n          const sp = s[p - 1] / scale;\n          const spm1 = s[p - 2] / scale;\n          const epm1 = e[p - 2] / scale;\n          const sk = s[k] / scale;\n          const ek = e[k] / scale;\n          const b = ((spm1 + sp) * (spm1 - sp) + epm1 * epm1) / 2;\n          const c = sp * epm1 * (sp * epm1);\n          let shift = 0;\n          if (b !== 0 || c !== 0) {\n            if (b < 0) {\n              shift = 0 - Math.sqrt(b * b + c);\n            } else {\n              shift = Math.sqrt(b * b + c);\n            }\n            shift = c / (b + shift);\n          }\n          let f = (sk + sp) * (sk - sp) + shift;\n          let g = sk * ek;\n          for (let j = k; j < p - 1; j++) {\n            let t = hypotenuse(f, g);\n            if (t === 0) t = Number.MIN_VALUE;\n            let cs = f / t;\n            let sn = g / t;\n            if (j !== k) {\n              e[j - 1] = t;\n            }\n            f = cs * s[j] + sn * e[j];\n            e[j] = cs * e[j] - sn * s[j];\n            g = sn * s[j + 1];\n            s[j + 1] = cs * s[j + 1];\n            if (wantv) {\n              for (let i = 0; i < n; i++) {\n                t = cs * V.get(i, j) + sn * V.get(i, j + 1);\n                V.set(i, j + 1, -sn * V.get(i, j) + cs * V.get(i, j + 1));\n                V.set(i, j, t);\n              }\n            }\n            t = hypotenuse(f, g);\n            if (t === 0) t = Number.MIN_VALUE;\n            cs = f / t;\n            sn = g / t;\n            s[j] = t;\n            f = cs * e[j] + sn * s[j + 1];\n            s[j + 1] = -sn * e[j] + cs * s[j + 1];\n            g = sn * e[j + 1];\n            e[j + 1] = cs * e[j + 1];\n            if (wantu && j < m - 1) {\n              for (let i = 0; i < m; i++) {\n                t = cs * U.get(i, j) + sn * U.get(i, j + 1);\n                U.set(i, j + 1, -sn * U.get(i, j) + cs * U.get(i, j + 1));\n                U.set(i, j, t);\n              }\n            }\n          }\n          e[p - 2] = f;\n          iter = iter + 1;\n          break;\n        }\n        case 4: {\n          if (s[k] <= 0) {\n            s[k] = s[k] < 0 ? -s[k] : 0;\n            if (wantv) {\n              for (let i = 0; i <= pp; i++) {\n                V.set(i, k, -V.get(i, k));\n              }\n            }\n          }\n          while (k < pp) {\n            if (s[k] >= s[k + 1]) {\n              break;\n            }\n            let t = s[k];\n            s[k] = s[k + 1];\n            s[k + 1] = t;\n            if (wantv && k < n - 1) {\n              for (let i = 0; i < n; i++) {\n                t = V.get(i, k + 1);\n                V.set(i, k + 1, V.get(i, k));\n                V.set(i, k, t);\n              }\n            }\n            if (wantu && k < m - 1) {\n              for (let i = 0; i < m; i++) {\n                t = U.get(i, k + 1);\n                U.set(i, k + 1, U.get(i, k));\n                U.set(i, k, t);\n              }\n            }\n            k++;\n          }\n          iter = 0;\n          p--;\n          break;\n        }\n        // no default\n      }\n    }\n\n    if (swapped) {\n      let tmp = V;\n      V = U;\n      U = tmp;\n    }\n\n    this.m = m;\n    this.n = n;\n    this.s = s;\n    this.U = U;\n    this.V = V;\n  }\n\n  solve(value) {\n    let Y = value;\n    let e = this.threshold;\n    let scols = this.s.length;\n    let Ls = Matrix.zeros(scols, scols);\n\n    for (let i = 0; i < scols; i++) {\n      if (Math.abs(this.s[i]) <= e) {\n        Ls.set(i, i, 0);\n      } else {\n        Ls.set(i, i, 1 / this.s[i]);\n      }\n    }\n\n    let U = this.U;\n    let V = this.rightSingularVectors;\n\n    let VL = V.mmul(Ls);\n    let vrows = V.rows;\n    let urows = U.rows;\n    let VLU = Matrix.zeros(vrows, urows);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < urows; j++) {\n        let sum = 0;\n        for (let k = 0; k < scols; k++) {\n          sum += VL.get(i, k) * U.get(j, k);\n        }\n        VLU.set(i, j, sum);\n      }\n    }\n\n    return VLU.mmul(Y);\n  }\n\n  solveForDiagonal(value) {\n    return this.solve(Matrix.diag(value));\n  }\n\n  inverse() {\n    let V = this.V;\n    let e = this.threshold;\n    let vrows = V.rows;\n    let vcols = V.columns;\n    let X = new Matrix(vrows, this.s.length);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < vcols; j++) {\n        if (Math.abs(this.s[j]) > e) {\n          X.set(i, j, V.get(i, j) / this.s[j]);\n        }\n      }\n    }\n\n    let U = this.U;\n\n    let urows = U.rows;\n    let ucols = U.columns;\n    let Y = new Matrix(vrows, urows);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < urows; j++) {\n        let sum = 0;\n        for (let k = 0; k < ucols; k++) {\n          sum += X.get(i, k) * U.get(j, k);\n        }\n        Y.set(i, j, sum);\n      }\n    }\n\n    return Y;\n  }\n\n  get condition() {\n    return this.s[0] / this.s[Math.min(this.m, this.n) - 1];\n  }\n\n  get norm2() {\n    return this.s[0];\n  }\n\n  get rank() {\n    let tol = Math.max(this.m, this.n) * this.s[0] * Number.EPSILON;\n    let r = 0;\n    let s = this.s;\n    for (let i = 0, ii = s.length; i < ii; i++) {\n      if (s[i] > tol) {\n        r++;\n      }\n    }\n    return r;\n  }\n\n  get diagonal() {\n    return Array.from(this.s);\n  }\n\n  get threshold() {\n    return (Number.EPSILON / 2) * Math.max(this.m, this.n) * this.s[0];\n  }\n\n  get leftSingularVectors() {\n    return this.U;\n  }\n\n  get rightSingularVectors() {\n    return this.V;\n  }\n\n  get diagonalMatrix() {\n    return Matrix.diag(this.s);\n  }\n}\n","import LuDecomposition from './dc/lu';\nimport QrDecomposition from './dc/qr';\nimport SingularValueDecomposition from './dc/svd';\nimport Matrix from './matrix';\nimport WrapperMatrix2D from './wrap/WrapperMatrix2D';\n\nexport function inverse(matrix, useSVD = false) {\n  matrix = WrapperMatrix2D.checkMatrix(matrix);\n  if (useSVD) {\n    return new SingularValueDecomposition(matrix).inverse();\n  } else {\n    return solve(matrix, Matrix.eye(matrix.rows));\n  }\n}\n\nexport function solve(leftHandSide, rightHandSide, useSVD = false) {\n  leftHandSide = WrapperMatrix2D.checkMatrix(leftHandSide);\n  rightHandSide = WrapperMatrix2D.checkMatrix(rightHandSide);\n  if (useSVD) {\n    return new SingularValueDecomposition(leftHandSide).solve(rightHandSide);\n  } else {\n    return leftHandSide.isSquare()\n      ? new LuDecomposition(leftHandSide).solve(rightHandSide)\n      : new QrDecomposition(leftHandSide).solve(rightHandSide);\n  }\n}\n","import LuDecomposition from './dc/lu';\nimport Matrix from './matrix';\nimport MatrixSelectionView from './views/selection';\n\nexport function determinant(matrix) {\n  matrix = Matrix.checkMatrix(matrix);\n  if (matrix.isSquare()) {\n    if (matrix.columns === 0) {\n      return 1;\n    }\n\n    let a, b, c, d;\n    if (matrix.columns === 2) {\n      // 2 x 2 matrix\n      a = matrix.get(0, 0);\n      b = matrix.get(0, 1);\n      c = matrix.get(1, 0);\n      d = matrix.get(1, 1);\n\n      return a * d - b * c;\n    } else if (matrix.columns === 3) {\n      // 3 x 3 matrix\n      let subMatrix0, subMatrix1, subMatrix2;\n      subMatrix0 = new MatrixSelectionView(matrix, [1, 2], [1, 2]);\n      subMatrix1 = new MatrixSelectionView(matrix, [1, 2], [0, 2]);\n      subMatrix2 = new MatrixSelectionView(matrix, [1, 2], [0, 1]);\n      a = matrix.get(0, 0);\n      b = matrix.get(0, 1);\n      c = matrix.get(0, 2);\n\n      return (\n        a * determinant(subMatrix0) -\n        b * determinant(subMatrix1) +\n        c * determinant(subMatrix2)\n      );\n    } else {\n      // general purpose determinant using the LU decomposition\n      return new LuDecomposition(matrix).determinant;\n    }\n  } else {\n    throw Error('determinant can only be calculated for a square matrix');\n  }\n}\n","import SingularValueDecomposition from './dc/svd';\nimport Matrix from './matrix';\n\nfunction xrange(n, exception) {\n  let range = [];\n  for (let i = 0; i < n; i++) {\n    if (i !== exception) {\n      range.push(i);\n    }\n  }\n  return range;\n}\n\nfunction dependenciesOneRow(\n  error,\n  matrix,\n  index,\n  thresholdValue = 10e-10,\n  thresholdError = 10e-10,\n) {\n  if (error > thresholdError) {\n    return new Array(matrix.rows + 1).fill(0);\n  } else {\n    let returnArray = matrix.addRow(index, [0]);\n    for (let i = 0; i < returnArray.rows; i++) {\n      if (Math.abs(returnArray.get(i, 0)) < thresholdValue) {\n        returnArray.set(i, 0, 0);\n      }\n    }\n    return returnArray.to1DArray();\n  }\n}\n\nexport function linearDependencies(matrix, options = {}) {\n  const { thresholdValue = 10e-10, thresholdError = 10e-10 } = options;\n  matrix = Matrix.checkMatrix(matrix);\n\n  let n = matrix.rows;\n  let results = new Matrix(n, n);\n\n  for (let i = 0; i < n; i++) {\n    let b = Matrix.columnVector(matrix.getRow(i));\n    let Abis = matrix.subMatrixRow(xrange(n, i)).transpose();\n    let svd = new SingularValueDecomposition(Abis);\n    let x = svd.solve(b);\n    let error = Matrix.sub(b, Abis.mmul(x)).abs().max();\n    results.setRow(\n      i,\n      dependenciesOneRow(error, x, i, thresholdValue, thresholdError),\n    );\n  }\n  return results;\n}\n","import SVD from './dc/svd';\nimport Matrix from './matrix';\n\nexport function pseudoInverse(matrix, threshold = Number.EPSILON) {\n  matrix = Matrix.checkMatrix(matrix);\n  if (matrix.isEmpty()) {\n    // with a zero dimension, the pseudo-inverse is the transpose, since all 0xn and nx0 matrices are singular\n    // (0xn)*(nx0)*(0xn) = 0xn\n    // (nx0)*(0xn)*(nx0) = nx0\n    return matrix.transpose();\n  }\n  let svdSolution = new SVD(matrix, { autoTranspose: true });\n\n  let U = svdSolution.leftSingularVectors;\n  let V = svdSolution.rightSingularVectors;\n  let s = svdSolution.diagonal;\n\n  for (let i = 0; i < s.length; i++) {\n    if (Math.abs(s[i]) > threshold) {\n      s[i] = 1.0 / s[i];\n    } else {\n      s[i] = 0.0;\n    }\n  }\n\n  return V.mmul(Matrix.diag(s).mmul(U.transpose()));\n}\n","import { isAnyArray } from 'is-any-array';\n\nimport Matrix from './matrix';\n\nexport function covariance(xMatrix, yMatrix = xMatrix, options = {}) {\n  xMatrix = new Matrix(xMatrix);\n  let yIsSame = false;\n  if (\n    typeof yMatrix === 'object' &&\n    !Matrix.isMatrix(yMatrix) &&\n    !isAnyArray(yMatrix)\n  ) {\n    options = yMatrix;\n    yMatrix = xMatrix;\n    yIsSame = true;\n  } else {\n    yMatrix = new Matrix(yMatrix);\n  }\n  if (xMatrix.rows !== yMatrix.rows) {\n    throw new TypeError('Both matrices must have the same number of rows');\n  }\n  const { center = true } = options;\n  if (center) {\n    xMatrix = xMatrix.center('column');\n    if (!yIsSame) {\n      yMatrix = yMatrix.center('column');\n    }\n  }\n  const cov = xMatrix.transpose().mmul(yMatrix);\n  for (let i = 0; i < cov.rows; i++) {\n    for (let j = 0; j < cov.columns; j++) {\n      cov.set(i, j, cov.get(i, j) * (1 / (xMatrix.rows - 1)));\n    }\n  }\n  return cov;\n}\n","import { isAnyArray } from 'is-any-array';\n\nimport Matrix from './matrix';\n\nexport function correlation(xMatrix, yMatrix = xMatrix, options = {}) {\n  xMatrix = new Matrix(xMatrix);\n  let yIsSame = false;\n  if (\n    typeof yMatrix === 'object' &&\n    !Matrix.isMatrix(yMatrix) &&\n    !isAnyArray(yMatrix)\n  ) {\n    options = yMatrix;\n    yMatrix = xMatrix;\n    yIsSame = true;\n  } else {\n    yMatrix = new Matrix(yMatrix);\n  }\n  if (xMatrix.rows !== yMatrix.rows) {\n    throw new TypeError('Both matrices must have the same number of rows');\n  }\n\n  const { center = true, scale = true } = options;\n  if (center) {\n    xMatrix.center('column');\n    if (!yIsSame) {\n      yMatrix.center('column');\n    }\n  }\n  if (scale) {\n    xMatrix.scale('column');\n    if (!yIsSame) {\n      yMatrix.scale('column');\n    }\n  }\n\n  const sdx = xMatrix.standardDeviation('column', { unbiased: true });\n  const sdy = yIsSame\n    ? sdx\n    : yMatrix.standardDeviation('column', { unbiased: true });\n\n  const corr = xMatrix.transpose().mmul(yMatrix);\n  for (let i = 0; i < corr.rows; i++) {\n    for (let j = 0; j < corr.columns; j++) {\n      corr.set(\n        i,\n        j,\n        corr.get(i, j) * (1 / (sdx[i] * sdy[j])) * (1 / (xMatrix.rows - 1)),\n      );\n    }\n  }\n  return corr;\n}\n","import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nimport { hypotenuse } from './util';\n\nexport default class EigenvalueDecomposition {\n  constructor(matrix, options = {}) {\n    const { assumeSymmetric = false } = options;\n\n    matrix = WrapperMatrix2D.checkMatrix(matrix);\n    if (!matrix.isSquare()) {\n      throw new Error('Matrix is not a square matrix');\n    }\n\n    if (matrix.isEmpty()) {\n      throw new Error('Matrix must be non-empty');\n    }\n\n    let n = matrix.columns;\n    let V = new Matrix(n, n);\n    let d = new Float64Array(n);\n    let e = new Float64Array(n);\n    let value = matrix;\n    let i, j;\n\n    let isSymmetric = false;\n    if (assumeSymmetric) {\n      isSymmetric = true;\n    } else {\n      isSymmetric = matrix.isSymmetric();\n    }\n\n    if (isSymmetric) {\n      for (i = 0; i < n; i++) {\n        for (j = 0; j < n; j++) {\n          V.set(i, j, value.get(i, j));\n        }\n      }\n      tred2(n, e, d, V);\n      tql2(n, e, d, V);\n    } else {\n      let H = new Matrix(n, n);\n      let ort = new Float64Array(n);\n      for (j = 0; j < n; j++) {\n        for (i = 0; i < n; i++) {\n          H.set(i, j, value.get(i, j));\n        }\n      }\n      orthes(n, H, ort, V);\n      hqr2(n, e, d, V, H);\n    }\n\n    this.n = n;\n    this.e = e;\n    this.d = d;\n    this.V = V;\n  }\n\n  get realEigenvalues() {\n    return Array.from(this.d);\n  }\n\n  get imaginaryEigenvalues() {\n    return Array.from(this.e);\n  }\n\n  get eigenvectorMatrix() {\n    return this.V;\n  }\n\n  get diagonalMatrix() {\n    let n = this.n;\n    let e = this.e;\n    let d = this.d;\n    let X = new Matrix(n, n);\n    let i, j;\n    for (i = 0; i < n; i++) {\n      for (j = 0; j < n; j++) {\n        X.set(i, j, 0);\n      }\n      X.set(i, i, d[i]);\n      if (e[i] > 0) {\n        X.set(i, i + 1, e[i]);\n      } else if (e[i] < 0) {\n        X.set(i, i - 1, e[i]);\n      }\n    }\n    return X;\n  }\n}\n\nfunction tred2(n, e, d, V) {\n  let f, g, h, i, j, k, hh, scale;\n\n  for (j = 0; j < n; j++) {\n    d[j] = V.get(n - 1, j);\n  }\n\n  for (i = n - 1; i > 0; i--) {\n    scale = 0;\n    h = 0;\n    for (k = 0; k < i; k++) {\n      scale = scale + Math.abs(d[k]);\n    }\n\n    if (scale === 0) {\n      e[i] = d[i - 1];\n      for (j = 0; j < i; j++) {\n        d[j] = V.get(i - 1, j);\n        V.set(i, j, 0);\n        V.set(j, i, 0);\n      }\n    } else {\n      for (k = 0; k < i; k++) {\n        d[k] /= scale;\n        h += d[k] * d[k];\n      }\n\n      f = d[i - 1];\n      g = Math.sqrt(h);\n      if (f > 0) {\n        g = -g;\n      }\n\n      e[i] = scale * g;\n      h = h - f * g;\n      d[i - 1] = f - g;\n      for (j = 0; j < i; j++) {\n        e[j] = 0;\n      }\n\n      for (j = 0; j < i; j++) {\n        f = d[j];\n        V.set(j, i, f);\n        g = e[j] + V.get(j, j) * f;\n        for (k = j + 1; k <= i - 1; k++) {\n          g += V.get(k, j) * d[k];\n          e[k] += V.get(k, j) * f;\n        }\n        e[j] = g;\n      }\n\n      f = 0;\n      for (j = 0; j < i; j++) {\n        e[j] /= h;\n        f += e[j] * d[j];\n      }\n\n      hh = f / (h + h);\n      for (j = 0; j < i; j++) {\n        e[j] -= hh * d[j];\n      }\n\n      for (j = 0; j < i; j++) {\n        f = d[j];\n        g = e[j];\n        for (k = j; k <= i - 1; k++) {\n          V.set(k, j, V.get(k, j) - (f * e[k] + g * d[k]));\n        }\n        d[j] = V.get(i - 1, j);\n        V.set(i, j, 0);\n      }\n    }\n    d[i] = h;\n  }\n\n  for (i = 0; i < n - 1; i++) {\n    V.set(n - 1, i, V.get(i, i));\n    V.set(i, i, 1);\n    h = d[i + 1];\n    if (h !== 0) {\n      for (k = 0; k <= i; k++) {\n        d[k] = V.get(k, i + 1) / h;\n      }\n\n      for (j = 0; j <= i; j++) {\n        g = 0;\n        for (k = 0; k <= i; k++) {\n          g += V.get(k, i + 1) * V.get(k, j);\n        }\n        for (k = 0; k <= i; k++) {\n          V.set(k, j, V.get(k, j) - g * d[k]);\n        }\n      }\n    }\n\n    for (k = 0; k <= i; k++) {\n      V.set(k, i + 1, 0);\n    }\n  }\n\n  for (j = 0; j < n; j++) {\n    d[j] = V.get(n - 1, j);\n    V.set(n - 1, j, 0);\n  }\n\n  V.set(n - 1, n - 1, 1);\n  e[0] = 0;\n}\n\nfunction tql2(n, e, d, V) {\n  let g, h, i, j, k, l, m, p, r, dl1, c, c2, c3, el1, s, s2, iter;\n\n  for (i = 1; i < n; i++) {\n    e[i - 1] = e[i];\n  }\n\n  e[n - 1] = 0;\n\n  let f = 0;\n  let tst1 = 0;\n  let eps = Number.EPSILON;\n\n  for (l = 0; l < n; l++) {\n    tst1 = Math.max(tst1, Math.abs(d[l]) + Math.abs(e[l]));\n    m = l;\n    while (m < n) {\n      if (Math.abs(e[m]) <= eps * tst1) {\n        break;\n      }\n      m++;\n    }\n\n    if (m > l) {\n      iter = 0;\n      do {\n        iter = iter + 1;\n\n        g = d[l];\n        p = (d[l + 1] - g) / (2 * e[l]);\n        r = hypotenuse(p, 1);\n        if (p < 0) {\n          r = -r;\n        }\n\n        d[l] = e[l] / (p + r);\n        d[l + 1] = e[l] * (p + r);\n        dl1 = d[l + 1];\n        h = g - d[l];\n        for (i = l + 2; i < n; i++) {\n          d[i] -= h;\n        }\n\n        f = f + h;\n\n        p = d[m];\n        c = 1;\n        c2 = c;\n        c3 = c;\n        el1 = e[l + 1];\n        s = 0;\n        s2 = 0;\n        for (i = m - 1; i >= l; i--) {\n          c3 = c2;\n          c2 = c;\n          s2 = s;\n          g = c * e[i];\n          h = c * p;\n          r = hypotenuse(p, e[i]);\n          e[i + 1] = s * r;\n          s = e[i] / r;\n          c = p / r;\n          p = c * d[i] - s * g;\n          d[i + 1] = h + s * (c * g + s * d[i]);\n\n          for (k = 0; k < n; k++) {\n            h = V.get(k, i + 1);\n            V.set(k, i + 1, s * V.get(k, i) + c * h);\n            V.set(k, i, c * V.get(k, i) - s * h);\n          }\n        }\n\n        p = (-s * s2 * c3 * el1 * e[l]) / dl1;\n        e[l] = s * p;\n        d[l] = c * p;\n      } while (Math.abs(e[l]) > eps * tst1);\n    }\n    d[l] = d[l] + f;\n    e[l] = 0;\n  }\n\n  for (i = 0; i < n - 1; i++) {\n    k = i;\n    p = d[i];\n    for (j = i + 1; j < n; j++) {\n      if (d[j] < p) {\n        k = j;\n        p = d[j];\n      }\n    }\n\n    if (k !== i) {\n      d[k] = d[i];\n      d[i] = p;\n      for (j = 0; j < n; j++) {\n        p = V.get(j, i);\n        V.set(j, i, V.get(j, k));\n        V.set(j, k, p);\n      }\n    }\n  }\n}\n\nfunction orthes(n, H, ort, V) {\n  let low = 0;\n  let high = n - 1;\n  let f, g, h, i, j, m;\n  let scale;\n\n  for (m = low + 1; m <= high - 1; m++) {\n    scale = 0;\n    for (i = m; i <= high; i++) {\n      scale = scale + Math.abs(H.get(i, m - 1));\n    }\n\n    if (scale !== 0) {\n      h = 0;\n      for (i = high; i >= m; i--) {\n        ort[i] = H.get(i, m - 1) / scale;\n        h += ort[i] * ort[i];\n      }\n\n      g = Math.sqrt(h);\n      if (ort[m] > 0) {\n        g = -g;\n      }\n\n      h = h - ort[m] * g;\n      ort[m] = ort[m] - g;\n\n      for (j = m; j < n; j++) {\n        f = 0;\n        for (i = high; i >= m; i--) {\n          f += ort[i] * H.get(i, j);\n        }\n\n        f = f / h;\n        for (i = m; i <= high; i++) {\n          H.set(i, j, H.get(i, j) - f * ort[i]);\n        }\n      }\n\n      for (i = 0; i <= high; i++) {\n        f = 0;\n        for (j = high; j >= m; j--) {\n          f += ort[j] * H.get(i, j);\n        }\n\n        f = f / h;\n        for (j = m; j <= high; j++) {\n          H.set(i, j, H.get(i, j) - f * ort[j]);\n        }\n      }\n\n      ort[m] = scale * ort[m];\n      H.set(m, m - 1, scale * g);\n    }\n  }\n\n  for (i = 0; i < n; i++) {\n    for (j = 0; j < n; j++) {\n      V.set(i, j, i === j ? 1 : 0);\n    }\n  }\n\n  for (m = high - 1; m >= low + 1; m--) {\n    if (H.get(m, m - 1) !== 0) {\n      for (i = m + 1; i <= high; i++) {\n        ort[i] = H.get(i, m - 1);\n      }\n\n      for (j = m; j <= high; j++) {\n        g = 0;\n        for (i = m; i <= high; i++) {\n          g += ort[i] * V.get(i, j);\n        }\n\n        g = g / ort[m] / H.get(m, m - 1);\n        for (i = m; i <= high; i++) {\n          V.set(i, j, V.get(i, j) + g * ort[i]);\n        }\n      }\n    }\n  }\n}\n\nfunction hqr2(nn, e, d, V, H) {\n  let n = nn - 1;\n  let low = 0;\n  let high = nn - 1;\n  let eps = Number.EPSILON;\n  let exshift = 0;\n  let norm = 0;\n  let p = 0;\n  let q = 0;\n  let r = 0;\n  let s = 0;\n  let z = 0;\n  let iter = 0;\n  let i, j, k, l, m, t, w, x, y;\n  let ra, sa, vr, vi;\n  let notlast, cdivres;\n\n  for (i = 0; i < nn; i++) {\n    if (i < low || i > high) {\n      d[i] = H.get(i, i);\n      e[i] = 0;\n    }\n\n    for (j = Math.max(i - 1, 0); j < nn; j++) {\n      norm = norm + Math.abs(H.get(i, j));\n    }\n  }\n\n  while (n >= low) {\n    l = n;\n    while (l > low) {\n      s = Math.abs(H.get(l - 1, l - 1)) + Math.abs(H.get(l, l));\n      if (s === 0) {\n        s = norm;\n      }\n      if (Math.abs(H.get(l, l - 1)) < eps * s) {\n        break;\n      }\n      l--;\n    }\n\n    if (l === n) {\n      H.set(n, n, H.get(n, n) + exshift);\n      d[n] = H.get(n, n);\n      e[n] = 0;\n      n--;\n      iter = 0;\n    } else if (l === n - 1) {\n      w = H.get(n, n - 1) * H.get(n - 1, n);\n      p = (H.get(n - 1, n - 1) - H.get(n, n)) / 2;\n      q = p * p + w;\n      z = Math.sqrt(Math.abs(q));\n      H.set(n, n, H.get(n, n) + exshift);\n      H.set(n - 1, n - 1, H.get(n - 1, n - 1) + exshift);\n      x = H.get(n, n);\n\n      if (q >= 0) {\n        z = p >= 0 ? p + z : p - z;\n        d[n - 1] = x + z;\n        d[n] = d[n - 1];\n        if (z !== 0) {\n          d[n] = x - w / z;\n        }\n        e[n - 1] = 0;\n        e[n] = 0;\n        x = H.get(n, n - 1);\n        s = Math.abs(x) + Math.abs(z);\n        p = x / s;\n        q = z / s;\n        r = Math.sqrt(p * p + q * q);\n        p = p / r;\n        q = q / r;\n\n        for (j = n - 1; j < nn; j++) {\n          z = H.get(n - 1, j);\n          H.set(n - 1, j, q * z + p * H.get(n, j));\n          H.set(n, j, q * H.get(n, j) - p * z);\n        }\n\n        for (i = 0; i <= n; i++) {\n          z = H.get(i, n - 1);\n          H.set(i, n - 1, q * z + p * H.get(i, n));\n          H.set(i, n, q * H.get(i, n) - p * z);\n        }\n\n        for (i = low; i <= high; i++) {\n          z = V.get(i, n - 1);\n          V.set(i, n - 1, q * z + p * V.get(i, n));\n          V.set(i, n, q * V.get(i, n) - p * z);\n        }\n      } else {\n        d[n - 1] = x + p;\n        d[n] = x + p;\n        e[n - 1] = z;\n        e[n] = -z;\n      }\n\n      n = n - 2;\n      iter = 0;\n    } else {\n      x = H.get(n, n);\n      y = 0;\n      w = 0;\n      if (l < n) {\n        y = H.get(n - 1, n - 1);\n        w = H.get(n, n - 1) * H.get(n - 1, n);\n      }\n\n      if (iter === 10) {\n        exshift += x;\n        for (i = low; i <= n; i++) {\n          H.set(i, i, H.get(i, i) - x);\n        }\n        s = Math.abs(H.get(n, n - 1)) + Math.abs(H.get(n - 1, n - 2));\n        x = y = 0.75 * s;\n        w = -0.4375 * s * s;\n      }\n\n      if (iter === 30) {\n        s = (y - x) / 2;\n        s = s * s + w;\n        if (s > 0) {\n          s = Math.sqrt(s);\n          if (y < x) {\n            s = -s;\n          }\n          s = x - w / ((y - x) / 2 + s);\n          for (i = low; i <= n; i++) {\n            H.set(i, i, H.get(i, i) - s);\n          }\n          exshift += s;\n          x = y = w = 0.964;\n        }\n      }\n\n      iter = iter + 1;\n\n      m = n - 2;\n      while (m >= l) {\n        z = H.get(m, m);\n        r = x - z;\n        s = y - z;\n        p = (r * s - w) / H.get(m + 1, m) + H.get(m, m + 1);\n        q = H.get(m + 1, m + 1) - z - r - s;\n        r = H.get(m + 2, m + 1);\n        s = Math.abs(p) + Math.abs(q) + Math.abs(r);\n        p = p / s;\n        q = q / s;\n        r = r / s;\n        if (m === l) {\n          break;\n        }\n        if (\n          Math.abs(H.get(m, m - 1)) * (Math.abs(q) + Math.abs(r)) <\n          eps *\n            (Math.abs(p) *\n              (Math.abs(H.get(m - 1, m - 1)) +\n                Math.abs(z) +\n                Math.abs(H.get(m + 1, m + 1))))\n        ) {\n          break;\n        }\n        m--;\n      }\n\n      for (i = m + 2; i <= n; i++) {\n        H.set(i, i - 2, 0);\n        if (i > m + 2) {\n          H.set(i, i - 3, 0);\n        }\n      }\n\n      for (k = m; k <= n - 1; k++) {\n        notlast = k !== n - 1;\n        if (k !== m) {\n          p = H.get(k, k - 1);\n          q = H.get(k + 1, k - 1);\n          r = notlast ? H.get(k + 2, k - 1) : 0;\n          x = Math.abs(p) + Math.abs(q) + Math.abs(r);\n          if (x !== 0) {\n            p = p / x;\n            q = q / x;\n            r = r / x;\n          }\n        }\n\n        if (x === 0) {\n          break;\n        }\n\n        s = Math.sqrt(p * p + q * q + r * r);\n        if (p < 0) {\n          s = -s;\n        }\n\n        if (s !== 0) {\n          if (k !== m) {\n            H.set(k, k - 1, -s * x);\n          } else if (l !== m) {\n            H.set(k, k - 1, -H.get(k, k - 1));\n          }\n\n          p = p + s;\n          x = p / s;\n          y = q / s;\n          z = r / s;\n          q = q / p;\n          r = r / p;\n\n          for (j = k; j < nn; j++) {\n            p = H.get(k, j) + q * H.get(k + 1, j);\n            if (notlast) {\n              p = p + r * H.get(k + 2, j);\n              H.set(k + 2, j, H.get(k + 2, j) - p * z);\n            }\n\n            H.set(k, j, H.get(k, j) - p * x);\n            H.set(k + 1, j, H.get(k + 1, j) - p * y);\n          }\n\n          for (i = 0; i <= Math.min(n, k + 3); i++) {\n            p = x * H.get(i, k) + y * H.get(i, k + 1);\n            if (notlast) {\n              p = p + z * H.get(i, k + 2);\n              H.set(i, k + 2, H.get(i, k + 2) - p * r);\n            }\n\n            H.set(i, k, H.get(i, k) - p);\n            H.set(i, k + 1, H.get(i, k + 1) - p * q);\n          }\n\n          for (i = low; i <= high; i++) {\n            p = x * V.get(i, k) + y * V.get(i, k + 1);\n            if (notlast) {\n              p = p + z * V.get(i, k + 2);\n              V.set(i, k + 2, V.get(i, k + 2) - p * r);\n            }\n\n            V.set(i, k, V.get(i, k) - p);\n            V.set(i, k + 1, V.get(i, k + 1) - p * q);\n          }\n        }\n      }\n    }\n  }\n\n  if (norm === 0) {\n    return;\n  }\n\n  for (n = nn - 1; n >= 0; n--) {\n    p = d[n];\n    q = e[n];\n\n    if (q === 0) {\n      l = n;\n      H.set(n, n, 1);\n      for (i = n - 1; i >= 0; i--) {\n        w = H.get(i, i) - p;\n        r = 0;\n        for (j = l; j <= n; j++) {\n          r = r + H.get(i, j) * H.get(j, n);\n        }\n\n        if (e[i] < 0) {\n          z = w;\n          s = r;\n        } else {\n          l = i;\n          if (e[i] === 0) {\n            H.set(i, n, w !== 0 ? -r / w : -r / (eps * norm));\n          } else {\n            x = H.get(i, i + 1);\n            y = H.get(i + 1, i);\n            q = (d[i] - p) * (d[i] - p) + e[i] * e[i];\n            t = (x * s - z * r) / q;\n            H.set(i, n, t);\n            H.set(\n              i + 1,\n              n,\n              Math.abs(x) > Math.abs(z) ? (-r - w * t) / x : (-s - y * t) / z,\n            );\n          }\n\n          t = Math.abs(H.get(i, n));\n          if (eps * t * t > 1) {\n            for (j = i; j <= n; j++) {\n              H.set(j, n, H.get(j, n) / t);\n            }\n          }\n        }\n      }\n    } else if (q < 0) {\n      l = n - 1;\n\n      if (Math.abs(H.get(n, n - 1)) > Math.abs(H.get(n - 1, n))) {\n        H.set(n - 1, n - 1, q / H.get(n, n - 1));\n        H.set(n - 1, n, -(H.get(n, n) - p) / H.get(n, n - 1));\n      } else {\n        cdivres = cdiv(0, -H.get(n - 1, n), H.get(n - 1, n - 1) - p, q);\n        H.set(n - 1, n - 1, cdivres[0]);\n        H.set(n - 1, n, cdivres[1]);\n      }\n\n      H.set(n, n - 1, 0);\n      H.set(n, n, 1);\n      for (i = n - 2; i >= 0; i--) {\n        ra = 0;\n        sa = 0;\n        for (j = l; j <= n; j++) {\n          ra = ra + H.get(i, j) * H.get(j, n - 1);\n          sa = sa + H.get(i, j) * H.get(j, n);\n        }\n\n        w = H.get(i, i) - p;\n\n        if (e[i] < 0) {\n          z = w;\n          r = ra;\n          s = sa;\n        } else {\n          l = i;\n          if (e[i] === 0) {\n            cdivres = cdiv(-ra, -sa, w, q);\n            H.set(i, n - 1, cdivres[0]);\n            H.set(i, n, cdivres[1]);\n          } else {\n            x = H.get(i, i + 1);\n            y = H.get(i + 1, i);\n            vr = (d[i] - p) * (d[i] - p) + e[i] * e[i] - q * q;\n            vi = (d[i] - p) * 2 * q;\n            if (vr === 0 && vi === 0) {\n              vr =\n                eps *\n                norm *\n                (Math.abs(w) +\n                  Math.abs(q) +\n                  Math.abs(x) +\n                  Math.abs(y) +\n                  Math.abs(z));\n            }\n            cdivres = cdiv(\n              x * r - z * ra + q * sa,\n              x * s - z * sa - q * ra,\n              vr,\n              vi,\n            );\n            H.set(i, n - 1, cdivres[0]);\n            H.set(i, n, cdivres[1]);\n            if (Math.abs(x) > Math.abs(z) + Math.abs(q)) {\n              H.set(\n                i + 1,\n                n - 1,\n                (-ra - w * H.get(i, n - 1) + q * H.get(i, n)) / x,\n              );\n              H.set(\n                i + 1,\n                n,\n                (-sa - w * H.get(i, n) - q * H.get(i, n - 1)) / x,\n              );\n            } else {\n              cdivres = cdiv(\n                -r - y * H.get(i, n - 1),\n                -s - y * H.get(i, n),\n                z,\n                q,\n              );\n              H.set(i + 1, n - 1, cdivres[0]);\n              H.set(i + 1, n, cdivres[1]);\n            }\n          }\n\n          t = Math.max(Math.abs(H.get(i, n - 1)), Math.abs(H.get(i, n)));\n          if (eps * t * t > 1) {\n            for (j = i; j <= n; j++) {\n              H.set(j, n - 1, H.get(j, n - 1) / t);\n              H.set(j, n, H.get(j, n) / t);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  for (i = 0; i < nn; i++) {\n    if (i < low || i > high) {\n      for (j = i; j < nn; j++) {\n        V.set(i, j, H.get(i, j));\n      }\n    }\n  }\n\n  for (j = nn - 1; j >= low; j--) {\n    for (i = low; i <= high; i++) {\n      z = 0;\n      for (k = low; k <= Math.min(j, high); k++) {\n        z = z + V.get(i, k) * H.get(k, j);\n      }\n      V.set(i, j, z);\n    }\n  }\n}\n\nfunction cdiv(xr, xi, yr, yi) {\n  let r, d;\n  if (Math.abs(yr) > Math.abs(yi)) {\n    r = yi / yr;\n    d = yr + r * yi;\n    return [(xr + r * xi) / d, (xi - r * xr) / d];\n  } else {\n    r = yr / yi;\n    d = yi + r * yr;\n    return [(r * xr + xi) / d, (r * xi - xr) / d];\n  }\n}\n","import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nexport default class CholeskyDecomposition {\n  constructor(value) {\n    value = WrapperMatrix2D.checkMatrix(value);\n    if (!value.isSymmetric()) {\n      throw new Error('Matrix is not symmetric');\n    }\n\n    let a = value;\n    let dimension = a.rows;\n    let l = new Matrix(dimension, dimension);\n    let positiveDefinite = true;\n    let i, j, k;\n\n    for (j = 0; j < dimension; j++) {\n      let d = 0;\n      for (k = 0; k < j; k++) {\n        let s = 0;\n        for (i = 0; i < k; i++) {\n          s += l.get(k, i) * l.get(j, i);\n        }\n        s = (a.get(j, k) - s) / l.get(k, k);\n        l.set(j, k, s);\n        d = d + s * s;\n      }\n\n      d = a.get(j, j) - d;\n\n      positiveDefinite &= d > 0;\n      l.set(j, j, Math.sqrt(Math.max(d, 0)));\n      for (k = j + 1; k < dimension; k++) {\n        l.set(j, k, 0);\n      }\n    }\n\n    this.L = l;\n    this.positiveDefinite = Boolean(positiveDefinite);\n  }\n\n  isPositiveDefinite() {\n    return this.positiveDefinite;\n  }\n\n  solve(value) {\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    let l = this.L;\n    let dimension = l.rows;\n\n    if (value.rows !== dimension) {\n      throw new Error('Matrix dimensions do not match');\n    }\n    if (this.isPositiveDefinite() === false) {\n      throw new Error('Matrix is not positive definite');\n    }\n\n    let count = value.columns;\n    let B = value.clone();\n    let i, j, k;\n\n    for (k = 0; k < dimension; k++) {\n      for (j = 0; j < count; j++) {\n        for (i = 0; i < k; i++) {\n          B.set(k, j, B.get(k, j) - B.get(i, j) * l.get(k, i));\n        }\n        B.set(k, j, B.get(k, j) / l.get(k, k));\n      }\n    }\n\n    for (k = dimension - 1; k >= 0; k--) {\n      for (j = 0; j < count; j++) {\n        for (i = k + 1; i < dimension; i++) {\n          B.set(k, j, B.get(k, j) - B.get(i, j) * l.get(i, k));\n        }\n        B.set(k, j, B.get(k, j) / l.get(k, k));\n      }\n    }\n\n    return B;\n  }\n\n  get lowerTriangularMatrix() {\n    return this.L;\n  }\n}\n","import { isAnyArray } from 'is-any-array';\n\nimport Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nexport default class nipals {\n  constructor(X, options = {}) {\n    X = WrapperMatrix2D.checkMatrix(X);\n    let { Y } = options;\n    const {\n      scaleScores = false,\n      maxIterations = 1000,\n      terminationCriteria = 1e-10,\n    } = options;\n\n    let u;\n    if (Y) {\n      if (isAnyArray(Y) && typeof Y[0] === 'number') {\n        Y = Matrix.columnVector(Y);\n      } else {\n        Y = WrapperMatrix2D.checkMatrix(Y);\n      }\n      if (Y.rows !== X.rows) {\n        throw new Error('Y should have the same number of rows as X');\n      }\n      u = Y.getColumnVector(0);\n    } else {\n      u = X.getColumnVector(0);\n    }\n\n    let diff = 1;\n    let t, q, w, tOld;\n\n    for (\n      let counter = 0;\n      counter < maxIterations && diff > terminationCriteria;\n      counter++\n    ) {\n      w = X.transpose().mmul(u).div(u.transpose().mmul(u).get(0, 0));\n      w = w.div(w.norm());\n\n      t = X.mmul(w).div(w.transpose().mmul(w).get(0, 0));\n\n      if (counter > 0) {\n        diff = t.clone().sub(tOld).pow(2).sum();\n      }\n      tOld = t.clone();\n\n      if (Y) {\n        q = Y.transpose().mmul(t).div(t.transpose().mmul(t).get(0, 0));\n        q = q.div(q.norm());\n\n        u = Y.mmul(q).div(q.transpose().mmul(q).get(0, 0));\n      } else {\n        u = t;\n      }\n    }\n\n    if (Y) {\n      let p = X.transpose().mmul(t).div(t.transpose().mmul(t).get(0, 0));\n      p = p.div(p.norm());\n      let xResidual = X.clone().sub(t.clone().mmul(p.transpose()));\n      let residual = u.transpose().mmul(t).div(t.transpose().mmul(t).get(0, 0));\n      let yResidual = Y.clone().sub(\n        t.clone().mulS(residual.get(0, 0)).mmul(q.transpose()),\n      );\n\n      this.t = t;\n      this.p = p.transpose();\n      this.w = w.transpose();\n      this.q = q;\n      this.u = u;\n      this.s = t.transpose().mmul(t);\n      this.xResidual = xResidual;\n      this.yResidual = yResidual;\n      this.betas = residual;\n    } else {\n      this.w = w.transpose();\n      this.s = t.transpose().mmul(t).sqrt();\n      if (scaleScores) {\n        this.t = t.clone().div(this.s.get(0, 0));\n      } else {\n        this.t = t;\n      }\n      this.xResidual = X.sub(t.mmul(w.transpose()));\n    }\n  }\n}\n",null,null,null,null,null,null,null,null,null,"import { MDSLayout } from '@antv/layout/lib/layout/mds';\n\nexport default MDSLayout;\n"],"sourceRoot":""}