"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _attribute = _interopRequireDefault(require("./attribute"));

var _touchactionConsts = require("../touchactionjs/touchaction-Consts");

var _recognizerConsts = require("../recognizerjs/recognizer-consts");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @private
 * Rotate
 * Recognized when two or more pointer are moving in a circular motion.
 * @constructor
 * @extends AttrRecognizer
 */
class RotateRecognizer extends _attribute.default {
  constructor() {
    super(...arguments);
  }

  getTouchAction() {
    return [_touchactionConsts.TOUCH_ACTION_NONE];
  }

  attrTest(input) {
    return super.attrTest(input) && (Math.abs(input.rotation) > this.options.threshold || this.state & _recognizerConsts.STATE_BEGAN);
  }

}

exports.default = RotateRecognizer;
RotateRecognizer.prototype.defaults = {
  event: 'rotate',
  threshold: 0,
  pointers: 2
};