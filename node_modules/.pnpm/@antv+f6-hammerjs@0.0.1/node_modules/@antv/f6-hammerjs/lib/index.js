"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _hammer = _interopRequireDefault(require("./hammer"));

var _assign = _interopRequireDefault(require("./utils/assign"));

var _inputConsts = require("./inputjs/input-consts");

var _recognizerConsts = require("./recognizerjs/recognizer-consts");

var _manager = _interopRequireDefault(require("./manager"));

var _inputConstructor = _interopRequireDefault(require("./inputjs/input-constructor"));

var _touchactionConstructor = _interopRequireDefault(require("./touchactionjs/touchaction-constructor"));

var _touch = _interopRequireDefault(require("./input/touch"));

var _pointerevent = _interopRequireDefault(require("./input/pointerevent"));

var _recognizerConstructor = _interopRequireDefault(require("./recognizerjs/recognizer-constructor"));

var _attribute = _interopRequireDefault(require("./recognizers/attribute"));

var _tap = _interopRequireDefault(require("./recognizers/tap"));

var _pan = _interopRequireDefault(require("./recognizers/pan"));

var _swipe = _interopRequireDefault(require("./recognizers/swipe"));

var _pinch = _interopRequireDefault(require("./recognizers/pinch"));

var _rotate = _interopRequireDefault(require("./recognizers/rotate"));

var _press = _interopRequireDefault(require("./recognizers/press"));

var _addEventListeners = _interopRequireDefault(require("./utils/add-event-listeners"));

var _removeEventListeners = _interopRequireDefault(require("./utils/remove-event-listeners"));

var _each = _interopRequireDefault(require("./utils/each"));

var _merge = _interopRequireDefault(require("./utils/merge"));

var _extend = _interopRequireDefault(require("./utils/extend"));

var _inherit = _interopRequireDefault(require("./utils/inherit"));

var _bindFn = _interopRequireDefault(require("./utils/bind-fn"));

var _toArray = _interopRequireDefault(require("./utils/to-array"));

var _uniqueArray = _interopRequireDefault(require("./utils/unique-array"));

var _splitStr = _interopRequireDefault(require("./utils/split-str"));

var _inArray = _interopRequireDefault(require("./utils/in-array"));

var _boolOrFn = _interopRequireDefault(require("./utils/bool-or-fn"));

var _hasParent = _interopRequireDefault(require("./utils/has-parent"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this prevents errors when Hammer is loaded in the presence of an AMD
//  style loader but by script tag, not by the loader.
var _default = (0, _assign.default)(_hammer.default, {
  INPUT_START: _inputConsts.INPUT_START,
  INPUT_MOVE: _inputConsts.INPUT_MOVE,
  INPUT_END: _inputConsts.INPUT_END,
  INPUT_CANCEL: _inputConsts.INPUT_CANCEL,
  STATE_POSSIBLE: _recognizerConsts.STATE_POSSIBLE,
  STATE_BEGAN: _recognizerConsts.STATE_BEGAN,
  STATE_CHANGED: _recognizerConsts.STATE_CHANGED,
  STATE_ENDED: _recognizerConsts.STATE_ENDED,
  STATE_RECOGNIZED: _recognizerConsts.STATE_RECOGNIZED,
  STATE_CANCELLED: _recognizerConsts.STATE_CANCELLED,
  STATE_FAILED: _recognizerConsts.STATE_FAILED,
  DIRECTION_NONE: _inputConsts.DIRECTION_NONE,
  DIRECTION_LEFT: _inputConsts.DIRECTION_LEFT,
  DIRECTION_RIGHT: _inputConsts.DIRECTION_RIGHT,
  DIRECTION_UP: _inputConsts.DIRECTION_UP,
  DIRECTION_DOWN: _inputConsts.DIRECTION_DOWN,
  DIRECTION_HORIZONTAL: _inputConsts.DIRECTION_HORIZONTAL,
  DIRECTION_VERTICAL: _inputConsts.DIRECTION_VERTICAL,
  DIRECTION_ALL: _inputConsts.DIRECTION_ALL,
  Manager: _manager.default,
  Input: _inputConstructor.default,
  TouchAction: _touchactionConstructor.default,
  TouchInput: _touch.default,
  PointerEventInput: _pointerevent.default,
  Recognizer: _recognizerConstructor.default,
  AttrRecognizer: _attribute.default,
  Tap: _tap.default,
  Pan: _pan.default,
  Swipe: _swipe.default,
  Pinch: _pinch.default,
  Rotate: _rotate.default,
  Press: _press.default,
  on: _addEventListeners.default,
  off: _removeEventListeners.default,
  each: _each.default,
  merge: _merge.default,
  extend: _extend.default,
  assign: _assign.default,
  inherit: _inherit.default,
  bindFn: _bindFn.default,
  toArray: _toArray.default,
  inArray: _inArray.default,
  uniqueArray: _uniqueArray.default,
  splitStr: _splitStr.default,
  boolOrFn: _boolOrFn.default,
  hasParent: _hasParent.default,
  addEventListeners: _addEventListeners.default,
  removeEventListeners: _removeEventListeners.default
});

exports.default = _default;